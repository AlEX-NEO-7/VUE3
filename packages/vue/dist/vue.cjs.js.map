{"version":3,"file":"vue.cjs.js","sources":["../../runtime-dom/src/nodeOps.ts","../../shared/src/index.ts","../../runtime-dom/src/patchProp.ts","../../runtime-core/src/createVNode.ts","../../runtime-core/src/h.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/createAppAPI.ts","../../runtime-core/src/componentAPI.ts","../../runtime-core/src/renderer.ts","../../runtime-dom/src/index.ts"],"sourcesContent":["export const nodeOps = {\r\n   insert: (child:Element, parent:Node, anchor?:Node) => {  // anchor 插入的参考位置\r\n      parent.insertBefore(child, anchor); // parent.appendChild(child)\r\n   },\r\n   remove: (child:Element) => {\r\n      const parent = child.parentNode;\r\n      if(parent){\r\n         parent.removeChild(child)\r\n      }\r\n   },\r\n   createElement : (tag:any) => document.createElement(tag),\r\n   createText: (text:string) => document.createTextNode(text),\r\n   setElementText: (el:Element, text:string) => el.textContent = text,\r\n   setText: (node:any, text:string) => node.innerText = text,\r\n   parentNode: (node:Element) => node.parentNode,\r\n   nextSilbing: (node:Element) => node.nextSibling,\r\n   querySelector: (selector:any) => document.querySelector(selector)\r\n}","export const extend = Object.assign\r\n\r\nexport const isObject = (value: any): boolean => value instanceof Object;\r\n\r\nexport const isArray = Array.isArray\r\n\r\nexport const isNumber = (value: any): boolean => typeof value === \"number\";\r\n\r\nexport const isString = (value: any): boolean => typeof value === \"string\";\r\n\r\nexport const isFunction = (value: any): boolean => typeof value === \"function\";\r\n\r\nexport const isIntegerKey = (key: any):boolean => parseInt(key) + \"\" === key;\r\n\r\nlet own = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (target: any, key: any):boolean => own.call(target, key);\r\n\r\nexport const hasChanged = (oldVal: any, newVal: any): boolean => oldVal !== newVal;\r\n\r\nexport const enum ShapeFlags{ // 二进制移位\r\n   ELEMENT = 1,\r\n   FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件\r\n   STATEFUL_COMPONENT = 1 << 2,   // 普通组件\r\n   TEXT_CHILDREN = 1 << 3,        // 子节点是文本\r\n   ARRAY_CHILDREN = 1 << 4,       // 子节点是数组\r\n   SLOTS_CHILDREN = 1 << 5,       // 组件插槽\r\n   TELPRORT = 1 << 6,             // teleport组件\r\n   SUSPENSE = 1 << 7,             // suspense组件\r\n   COMPONENT = ShapeFlags.STATEFUL_COMPONENT | FUNCTIONAL_COMPONENT    // 组件\r\n}\r\n\r\n// component = 010 | 100 = 110\r\n// component & FUN = 010  compoent & STAT = 100\r\n// 与其他人 与算法 得出来的都为0  这种做法可以确定权限的关系 \r\n","import { isString } from \"@vue/shared\";\r\n\r\n// 需要对比属性 diff算法 属性比对前后值\r\nfunction patchClass(el: Element, value: any) {\r\n   if (value === null) {\r\n      el.removeAttribute('class')\r\n   } else {\r\n      el.className = value;\r\n   }\r\n}\r\n\r\nfunction patchStyle(el: Element | any, prev: any, next: any) {\r\n   const style = el.style; // 获取样式表\r\n   const isCssString = isString(next); // 判断传入的是否为string\r\n   if (next && !isCssString) {   // 不是则循环修改\r\n      for (const key in next) {\r\n         style[key] = next[key];\r\n      }\r\n      if (prev && !isString(prev)) {\r\n         for (const key in prev) {\r\n            if (next[key] == null) {\r\n               style[key] = null;\r\n            }\r\n         }\r\n      }\r\n   } else {\r\n      if (isCssString) {  // 是string则直接赋值\r\n         if (prev !== next) {\r\n            style.cssText = next;\r\n         } else if (prev) {\r\n            el.removeAttribute('style');\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nfunction createInvoker(value: any) {\r\n   const invoker = (e: any) => {\r\n      invoker.value(e);\r\n   }\r\n   invoker.value = value;  // 后续换绑可以直接更新value值\r\n   return invoker;\r\n}\r\n\r\nfunction patchEvent(el: Element | any, key: string, nextValue: any) {\r\n   // vue event invoker 类似事件池 缓存绑定的事件\r\n   const invokers = el._vei || (el._vel = {});  // 在元素上绑定一个自定义属性 用来记录绑定的事件\r\n   const existingInvoker = invokers[key];\r\n\r\n   if(existingInvoker && nextValue){   // 换绑\r\n      existingInvoker.value = nextValue;\r\n   }else {\r\n      const eventName = key.slice(2).toLowerCase();   // 如果放在if else外面触发不了effect\r\n      if (nextValue) {  // 新增\r\n         const invoker = invokers[key] = createInvoker(nextValue);\r\n         el.addEventListener(eventName, invoker);\r\n      } else if(existingInvoker){   // 删除\r\n         el.removeEventListener(eventName, existingInvoker);\r\n         invokers[key] = undefined;\r\n      }\r\n   }\r\n}\r\n\r\nfunction patchAttr(el:Element, key:string, value:any) {\r\n   if(value == null){\r\n      el.removeAttribute(key);\r\n   }else {\r\n      el.setAttribute(key, value);\r\n   }\r\n}\r\n\r\nexport const patchDOMProp = (el: Element, key: string, prevValue: any, nextValue: any) => {\r\n   if (key === 'class') {\r\n      patchClass(el, nextValue)\r\n   } else if (key === 'style') {\r\n      patchStyle(el, prevValue, nextValue)\r\n   } else if (/^on[^a-z]/.test(key)) {  // onClick...\r\n      patchEvent(el, key, nextValue);\r\n   } else {  // 其他属性 setAttribute （data-type...）\r\n      patchAttr(el, key, nextValue);\r\n   }\r\n}\r\n\r\n","import { isObject, isString, ShapeFlags } from \"@vue/shared\"\r\n\r\nexport const createVNode = (type, props, children?) => {    // h('div', {}, 'Hello!')\r\n   // 虚拟节点就是用一个对象来描述信息的\r\n   const shapeFlag = isObject(type) ? ShapeFlags.COMPONENT : isString(type) ? ShapeFlags.ELEMENT:0;\r\n\r\n   const vnode = {   // 跨平台   (变成类型别名)\r\n      __v_isVNode: true,\r\n      type,\r\n      shapeFlag,\r\n      props,\r\n      children,\r\n      key: props && props.key,\r\n      component: null,     // 如果是组件的虚拟节点需要保存组件实例\r\n      el: null,            // 虚拟节点对应的真实节点\r\n   }\r\n\r\n   if(children){  // 把儿子节点的描述合并到shapleFlag\r\n     vnode.shapeFlag |= isString(children) ? ShapeFlags.TEXT_CHILDREN : ShapeFlags.ARRAY_CHILDREN;\r\n   }\r\n\r\n   // vnode 可以描述当前它是个怎样的节点 子节点是怎么样的\r\n   return vnode;\r\n}\r\n\r\nexport function isVNode(vnode) {\r\n   return !!vnode.__v_isVNode\r\n}\r\n\r\nexport const Text = Symbol();\r\nexport function normalizedVNode(vnode) {\r\n   if(isObject(vnode)){\r\n      return vnode;\r\n   }\r\n   return createVNode(Text, null, String(vnode));\r\n}\r\n\r\nexport function isSameVNodeType(n1, n2) {\r\n   return n1.type === n2.type && n1.key === n2.key;\r\n}","import { isArray, isObject } from \"@vue/shared\";\r\nimport { createVNode, isVNode } from \"./createVNode\";\r\n\r\nexport function h(type, propsOrChildren, children) {\r\n   let len = arguments.length;\r\n\r\n   if(len === 2){\r\n      if(isObject(propsOrChildren) && !isArray(propsOrChildren)){\r\n         if(isVNode(propsOrChildren)){\r\n            return createVNode(type, null, [propsOrChildren])  // h('div', h('span'))\r\n         }\r\n         return createVNode(type, propsOrChildren) // h('div', {color:red})\r\n      }else {\r\n         return createVNode(type, null, propsOrChildren) // h('div', 'Hello')  h('div', ['Hello','Hello'])\r\n      }\r\n   }else {\r\n      if(len > 3){   // 对不是标准传参形式的参数进行处理\r\n         Array.prototype.slice.call(arguments, 2);\r\n      }else if(len === 3 && isVNode(children)) {\r\n         children = [children];\r\n      }\r\n      return createVNode(type, propsOrChildren, children);\r\n   }\r\n}","import { ReactiveEffect } from \"./effect\";\r\n\r\nexport function createDep (effects:Array<ReactiveEffect>):Set<ReactiveEffect<any>> { // 创建依赖收集\r\n   const dep = new Set(effects);\r\n\r\n   return dep;\r\n}","import { extend, isArray, isIntegerKey } from \"@vue/shared\";\r\nimport { createDep } from \"./dep\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\n\r\nlet activeEffect: any;   // 当前正在执行的effect\r\n\r\nexport class ReactiveEffect<T = any>{\r\n   active: boolean = true; // 是否是激活状态 \r\n   deps: any = [];   // 让effect记录他依赖了哪些属性，同时记录当前属性依赖了哪个effect\r\n   parent: ReactiveEffect | undefined = undefined;\r\n   fn: Function;\r\n   scheduler: any;\r\n\r\n   constructor(fn: Function, scheduler?: any) {\r\n      this.fn = fn;\r\n      this.scheduler = scheduler;\r\n   }\r\n\r\n   run() {  // 调用run会让fn执行\r\n      if (!this.active) {  // 如果处于非激活状态，调用run方法会默认调用fn函数\r\n         return this.fn();\r\n      }\r\n\r\n      let parent = activeEffect;\r\n\r\n      while (parent) {\r\n         if (parent === this) {\r\n            return;\r\n         }\r\n         parent = parent.parent;\r\n      }\r\n\r\n      try {\r\n         this.parent = activeEffect;\r\n         activeEffect = this;\r\n         return this.fn()  // 取值 new Proxy 会执行get方法（收集依赖）\r\n      } finally {\r\n         activeEffect = this.parent;\r\n         this.parent = undefined;\r\n      }\r\n   }\r\n\r\n   stop() {    // 让effect和dep取消关联\r\n      if (this.active) {\r\n         cleanupEffect(this); // 移除dep上存储的effect依赖\r\n      }\r\n      this.active = false;\r\n   }\r\n}\r\n\r\n// 清空依赖收集\r\nfunction cleanupEffect(effect) {\r\n   const { deps } = effect;\r\n   if (deps.length) {\r\n      for (let i = 0; i < deps.length; i++) {\r\n         deps[i].delete(effect); // 让属性对应的effect移除掉\r\n      }\r\n      deps.length = 0;\r\n   }\r\n}\r\n\r\nexport function effect(fn: any, options: any = {}) {\r\n   if (fn.effect) {\r\n      fn = fn.effect.fn;\r\n   }\r\n   // 把effect变成一个响应式的effect，可以做到数据变化后重新执行\r\n   const _effect = new ReactiveEffect(fn);\r\n\r\n   if (options) {\r\n      extend(_effect, options);\r\n   }\r\n\r\n   if (!options || !options.lazy) { // 如果不为lazy默认执行一次\r\n      _effect.run();\r\n   }\r\n\r\n   const runner = _effect.run.bind(_effect);\r\n\r\n   runner.effect = _effect;   // 给runner添加effect实现 就是effect实例\r\n\r\n   return runner;\r\n}\r\n\r\n// 让某个对象中的属性收集它对应的effect函数\r\nconst targetMap = new Map()    // 把收集了依赖的对象放入map\r\nexport function track(target: any, key: Symbol | string, type: TrackOpTypes) {\r\n   if (!activeEffect) {\r\n      return;\r\n   }\r\n\r\n   let depsMap = targetMap.get(target);\r\n\r\n   if (!depsMap) {  // 查看是否把当前这个对象放入依赖weakmap，没有则创建一个map放入作为值\r\n      targetMap.set(target, (depsMap = new Map()));\r\n   }\r\n\r\n   let dep = depsMap.get(key);\r\n\r\n   if (!dep) {   // 查看寻找的这个对象里面是否把当前的key放入map，没有则创建一个set放入作为值\r\n      depsMap.set(key, (dep = new Set()));\r\n   }\r\n\r\n   trackEffects(dep);\r\n}\r\n\r\n// 查看set是否有放入了effect，没有则把当前的effect放入set\r\nexport function trackEffects(dep) {\r\n   if (!dep.has(activeEffect)) {\r\n      dep.add(activeEffect);\r\n      (activeEffect as any).deps.push(dep);\r\n   }\r\n}\r\n\r\n// 触发执行依赖，添加元素时，也自动添加effect，并收集依赖\r\nexport function trigger(target: any, key: any, type?: TriggerOrTypes, newVal?: any, oldVal?: any) {\r\n   // 如果target没有被收集依赖则忽略\r\n   const depsMap = targetMap.get(target);\r\n   if (!depsMap) {\r\n      return;\r\n   }\r\n\r\n   // 将所有要执行的effect全部放到一个集合中，最终一起执行\r\n   const deps = [];\r\n\r\n   if (key === \"length\" && isArray(target)) {// 判断为数组，且更新的是长度\r\n      // 如果对应的长度（key）有依赖收集则需要更新\r\n      depsMap.forEach((dep: Array<any>, _key: any) => {// 如果更改的长度小于收集的索引，那么这个索引也需要触发effect进行更新\r\n         if (key === \"length\" || _key >= newVal) {// _key为收集的索引，dep为被收集的索引所有effect的Set集合\r\n            deps.push(dep);\r\n         }\r\n      });\r\n      switch (type) { // 数组修改超出边界\r\n         case TriggerOrTypes.ADD:\r\n            if (isArray(target) && isIntegerKey(key)) {\r\n               // 修改数组中的某个索引(边界之外的，没有赋值所以前面判断为新增)\r\n               deps.push(depsMap.get(\"length\"));   // 触发长度依赖更新\r\n            }\r\n      }\r\n   } else {\r\n      // 对象\r\n      if (key !== undefined) {\r\n         deps.push(depsMap.get(key));   // 拿到具体的dep合集并匹配进新合集\r\n      }\r\n   }\r\n\r\n   const effects: Array<ReactiveEffect> = [];\r\n\r\n   // dep是Set数据类型，里面包含 activeEffect\r\n   for (const dep of deps) {\r\n      if (dep) {\r\n         effects.push(...dep);\r\n      }\r\n   }\r\n\r\n   triggerEffects(createDep(effects));\r\n}\r\n\r\n// 执行所有effect\r\nexport function triggerEffects(dep: Set<ReactiveEffect<any>>) {\r\n   for (const effect of dep) {\r\n      if (effect !== activeEffect) {// 如果当前执行的effect和要执行的effect是同一个就不执行，防止循环\r\n         if (effect.scheduler) {\r\n            effect.scheduler()\r\n         } else {\r\n            effect.run();\r\n         }\r\n      }\r\n   }\r\n}\r\n","// 实现handler\r\n// 1. 是否仅读    2. 是否深度\r\n\r\nimport { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive, readonly } from \"./reactive\";\r\n\r\n// Getter\r\nconst get = createGetter(false, false);\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true, false);\r\nconst shallowReadonlyGet = createGetter(true, true);\r\n\r\n// Setter\r\nconst set = createSetter(false);\r\nconst shallowSet = createSetter(true);\r\n\r\nlet readonlyObject = {  // 只读对象的Setter方法\r\n   set: (target: any, key: any) => {\r\n      console.warn(`${key} is a read-only attribute and cannot be modified`);\r\n   }\r\n}\r\n\r\nfunction createGetter(isReadOnly: boolean = false, shallow: boolean = false): Function { // 拦截获取\r\n   return function get(target, key, reciver) {  // reciver为代理对象\r\n      // proxy + reflect\r\n      // Reflect方法具备返回值\r\n      const res = Reflect.get(target, key, reciver);\r\n\r\n      if (key === \"__v_isReactive\" || key === \"__v_isReadonly\") {\r\n         return res;\r\n      }\r\n\r\n      if (!isReadOnly) {\r\n         // 收集依赖，等数据变化后更新视图\r\n         track(target, key, TrackOpTypes.GET);\r\n      }\r\n\r\n      if (shallow) {   // 浅层响应式直接返回对象\r\n         return res;\r\n      }\r\n\r\n      if (isObject(res)) {  // 如果是对象继续递归，Vue2一上来就递归; Vue3是当取值时会进行代理，Vue3的代理模式是懒代理\r\n         return isReadOnly ? readonly(res) : reactive(res);\r\n      }\r\n\r\n      return res;\r\n   }\r\n}\r\n\r\nfunction createSetter(shallow: boolean): Function {  // 拦截设置\r\n   return function set(target, key, value, reciver) {   // target[key] = value\r\n      // 当数据更新时，通知所有对应的属性的effect重新执行\r\n\r\n      // 区分新增还是修改执行的set\r\n      let oldVal = target[key];\r\n      if (key === \"__v_isReactive\" || key === \"__v_isReadonly\") {   // 不允许修改内置属性\r\n         console.warn(`The ${key} attribute is a built-in attribute and cannot be changed.`);\r\n         return oldVal;\r\n      }\r\n      const res = Reflect.set(target, key, value, reciver);    // 用Reflect比直接target[key] = value 的做法更好\r\n      let hasKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\r\n\r\n\r\n      if (!hasKey) {\r\n         // 新增\r\n         trigger(target, key, TriggerOrTypes.ADD, value)\r\n      } else if (hasChanged(oldVal, value)) {\r\n         //修改, 并且保证修改的值与之前的不一样\r\n         trigger(target, key, TriggerOrTypes.SET, value, oldVal)\r\n      }\r\n\r\n      return res;\r\n   }\r\n}\r\n\r\nexport const mutableHandlers = {\r\n   get,\r\n   set\r\n};\r\n\r\nexport const shallowReactiveHandlers = {\r\n   get: shallowGet,\r\n   set: shallowSet\r\n};\r\n\r\nexport const readonlyHandlers = extend({\r\n   get: readonlyGet,\r\n\r\n}, readonlyObject);\r\n\r\nexport const shallowReadonlyHandlers = extend({\r\n   get: shallowReadonlyGet,\r\n}, readonlyObject);","// 各个方法区别 : 1. 是不是仅读     2. 是不是深度\r\n// 柯里化\r\nimport { isObject } from '@vue/shared'\r\nimport {\r\n   mutableHandlers,\r\n   shallowReactiveHandlers,\r\n   readonlyHandlers,\r\n   shallowReadonlyHandlers\r\n} from './baseHandlers'\r\n\r\nexport function reactive(target) {\r\n   target[\"__v_isReactive\"] = true;\r\n   target[\"__v_isReadonly\"] = false;\r\n   return createReactiveObject(target, false, mutableHandlers)\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n   target[\"__v_isReactive\"] = true;\r\n   target[\"__v_isReadonly\"] = false;\r\n   return createReactiveObject(target, false, shallowReactiveHandlers)\r\n}\r\n\r\nexport function readonly(target) {\r\n   target[\"__v_isReactive\"] = false;\r\n   target[\"__v_isReadonly\"] = true;\r\n   return createReactiveObject(target, true, readonlyHandlers)\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n   target[\"__v_isReactive\"] = false;\r\n   target[\"__v_isReadonly\"] = true;\r\n   return createReactiveObject(target, false, shallowReadonlyHandlers)\r\n}\r\n\r\n// 拦截数据的读取和数据的修改\r\nconst reactiveMap = new WeakMap();  // 弱引用，会自动进行垃圾回收不会造成内存泄漏，key是对象\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject(target: any, isReadOnly: boolean, handlers: Object): any {\r\n   // reactive API 只拦截对象属性\r\n   if (!isObject(target)) {\r\n      return target;\r\n   }\r\n\r\n   // 如果对象已经被代理了直接拿到代理对象，如果没有被代理，也要判断是不是被深度或仅读代理 又要仅读或深度代理\r\n   const proxyMap = isReadOnly ? readonlyMap : reactiveMap;\r\n\r\n   const existProxy = proxyMap.get(target);\r\n   if (existProxy) {\r\n      return existProxy;\r\n   }\r\n\r\n   const proxy = new Proxy(target, handlers);\r\n   proxyMap.set(target, proxy); //  将将要代理的对象和对应的代理对象存起来\r\n\r\n   return proxy;\r\n}","import { hasChanged, isArray, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive } from \"./reactive\";\r\n\r\n// 把普通属性改为响应式属性\r\nexport function ref(value: any) {\r\n   return createRef(value, false);\r\n}\r\n\r\n// 与ref类似但是响应式是浅响应式\r\nexport function shallowRef(value: any) {\r\n   return createRef(value, true);\r\n}\r\n\r\n// 创建RefImpl的实例\r\nfunction createRef(rawValue: any, shallow: boolean) {\r\n   if (isRef(rawValue)) {\r\n      return rawValue\r\n   }\r\n   return new RefImpl(rawValue, shallow)\r\n}\r\n\r\n// 判断值是否为ref类型--即判断是否为RefImpl或ObjectRefImpl类的实例\r\nexport function isRef(r: any) {\r\n   return !!(r && r.__v_isRef === true);\r\n}\r\n\r\n// 把对象中的某个key变成响应式\r\nexport function toRef(object: Object|Array<any>, key: any, defaultValue?: any) {\r\n   const val = object[key];\r\n   return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);\r\n}\r\n\r\n// 把一个对象中的所有的key转换成响应式\r\nexport function toRefs(object: Object|Array<any>) {\r\n   if (!isProxy(object)) {    //(process.env.NODE_ENV !== 'production') &&\r\n      console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n   }\r\n   const ret = isArray(object) ? new Array(object.length) : {};\r\n   for (const key in object) {\r\n      ret[key] = toRef(object, key);\r\n   }\r\n   return ret;\r\n}\r\n\r\n// 拿到原始数据\r\nexport function toRaw(observed: any) {\r\n   const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n   return raw ? toRaw(raw) : observed;\r\n}\r\n\r\n// 如果不为shallow且value为对象则使用reactive方法响应式整个value\r\nconst toReactive = (value: any) => isObject(value) ? reactive(value) : value;\r\n\r\n// 判断它是否已经被ref或reactive包装过\r\nfunction isProxy(value: Object|Array<any>) {\r\n   return isReactive(value) || isReadonly(value);\r\n}\r\nfunction isReactive(value: Object|Array<any>) {\r\n   if (isReadonly(value)) {\r\n      return isReactive(value[\"__v_raw\" /* RAW */]);\r\n   }\r\n   return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value: Object|Array<any>) {\r\n   return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\n\r\n\r\nclass RefImpl {\r\n   _value: any;\r\n   __v_isShallow: boolean;    // 是否为浅响应\r\n   dep: any;                  // 对应的effect\r\n   __v_isRef: boolean;        // 产生的实例会被添加该属性，表示是一个ref类型的数据\r\n   __v_raw: any;              // 对应原本的value\r\n\r\n   constructor(value: any, shallow: boolean) {\r\n      this._value = shallow ? value : toReactive(value);\r\n      this.__v_isShallow = shallow;\r\n      this.dep = undefined;\r\n      this.__v_isRef = true;\r\n      this.__v_raw = shallow ? value : toRaw(value);\r\n   }\r\n\r\n   // 类属性访问器\r\n   get value() {\r\n      track(this, \"value\", TrackOpTypes.GET)\r\n      return this._value;\r\n   }\r\n   set value(newVal) {\r\n      // newVal = this.__v_isShallow ? newVal : toRaw(newVal);\r\n      if (hasChanged(newVal, this.__v_raw)) {\r\n         this.__v_raw = newVal;\r\n         this._value = this.__v_isShallow ? newVal : toReactive(newVal);\r\n         trigger(this, \"value\", TriggerOrTypes.SET, newVal);\r\n      }\r\n   }\r\n}\r\n\r\nclass ObjectRefImpl {\r\n   _object: Object|Array<any>\r\n   _key: any\r\n   _defaultValue: any\r\n   __v_isRef: boolean\r\n\r\n   constructor(_object: Object|Array<any>, _key: any, _defaultValue: any) {\r\n      this._object = _object;\r\n      this._key = _key;\r\n      this._defaultValue = _defaultValue;\r\n      this.__v_isRef = true;\r\n   }\r\n\r\n   get value() {\r\n      const val = this._object[this._key];\r\n      return val === undefined ? this._defaultValue : val;\r\n   }\r\n\r\n   set value(newVal) {\r\n      this._object[this._key] = newVal;\r\n   }\r\n}","import { isFunction } from \"@vue/shared\";\r\nimport { ReactiveEffect, track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { toRaw } from \"./ref\";\r\n\r\nclass ComputedRefImpl {\r\n   _setter: Function;\r\n   _dirty: boolean;  // 脏数据标记\r\n   dep: any = undefined;   // 存储dep\r\n   effect: ReactiveEffect; // 计算属性包装的effect\r\n   __v_isRef: boolean;  // ref标记\r\n   _value: any;   // 存储value值\r\n   constructor(getter: Function, _setter: Function, isReadonly: boolean) {\r\n      this._setter = _setter;\r\n      this._dirty = true;\r\n      this.__v_isRef = true;\r\n\r\n      this.effect = new ReactiveEffect(getter, () => {   // 计算属性的依赖值变化，不要重新执行计算属性的effect，而是把数据标记为脏数据\r\n         if (!this._dirty) {\r\n            this._dirty = true;\r\n            trigger(this, \"value\", TriggerOrTypes.SET);\r\n         }\r\n      });\r\n      this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n   }\r\n\r\n   get value() {\r\n      const self = toRaw(this);\r\n      track(self, \"value\", TrackOpTypes.GET);\r\n      if (self._dirty) {\r\n         self._dirty = false;\r\n         self._value = self.effect.run(); // 将结果缓存到effect中，这样就不需要每次都run\r\n      }\r\n      return self._value;\r\n   }\r\n\r\n   set value(newValue: any) {\r\n      this._setter(newValue);\r\n   }\r\n}\r\n\r\nexport function computed(getterOrOptions: any) {\r\n   let getter: Function;\r\n   let setter: Function;\r\n   let onlyGetter = isFunction(getterOrOptions);\r\n\r\n   if (onlyGetter) {\r\n      getter = getterOrOptions;\r\n      setter = () => {\r\n         console.warn(\"computed value is readonly\")\r\n      }\r\n   } else {\r\n      getter = getterOrOptions.get;\r\n      setter = getterOrOptions.set;\r\n   }\r\n   return new ComputedRefImpl(getter, setter, onlyGetter || !setter);\r\n}","import { createVNode } from './createVNode'\r\n\r\n\r\n\r\nexport const createAppAPI = (render:Function) => {\r\n   return (rootCompont, rootProps) => {\r\n      let isMounted = false;\r\n      const app = { // 返回的app对象\r\n         mount(container) {\r\n            // 1. 创造虚拟节点\r\n            let vnode = createVNode(rootCompont, rootProps);   // h函数\r\n            // 2. 挂载的核心就是根据传入的组件对象，创造虚拟节点，再把虚拟节点渲染到组件中\r\n            render(vnode, container);\r\n            if(!isMounted){\r\n               isMounted = true;\r\n            }\r\n         },\r\n         unmount() {}\r\n      }\r\n      return app;\r\n   }\r\n}","import { reactive } from '@vue/reactivity';\r\nimport { hasOwn, isFunction, isObject } from '@vue/shared';\r\n\r\n// 生成组件实例\r\nexport function createComponentInstance(vnode) {\r\n   const type = vnode.type;\r\n   const instance = {\r\n      vnode,                     // 实例化对象的虚拟节点\r\n      type,                      // 组件对象\r\n      subTree: null,             // 组件渲染的内容   组件的vnode叫vnode 组件渲染的结果叫subTree\r\n      ctx: {},                   // 上下文\r\n      props: {},                 // 组件属性\r\n      attrs: {},                 // 除了props中的属性\r\n      slots: {},                 // 组件的插槽\r\n      setupState: {},            // setup函数返回的状态\r\n      propsOptions: type.props,  // 属性选项\r\n      proxy: null,               // 实例的代理对象\r\n      render: null,              // 组件的渲染函数\r\n      emit: null,                // 事件触发\r\n      expose: {},                // 组件暴露的方法\r\n      isMounted: false           // 组件是否挂载完成\r\n   }\r\n\r\n   instance.ctx = { _: instance };\r\n   return instance;\r\n}\r\n\r\n// 给组件实例进行赋值\r\nexport function setupComponent(instance) {\r\n   const { props, children } = instance.vnode;\r\n   // 组件的props初始化 attrs初始化\r\n   initProps(instance, props);\r\n   // 插槽的初始化\r\n   initSlots(instance, children);\r\n   // 启动状态，目的是调用setup函数拿到返回值\r\n   setupStatefulComponent(instance);\r\n}\r\n\r\n// 初始化props和attrs\r\nexport function initProps(instance, rawProps) {\r\n   const props = {};\r\n   const attrs = {};\r\n   const options = Object.keys(instance.propsOptions)\r\n\r\n   if (rawProps) {\r\n      for (const [key, value] of Object.entries(rawProps)) {\r\n         if (options.includes(key as string)) {\r\n            props[key] = value;\r\n         } else {\r\n            attrs[key] = value;\r\n         }\r\n      }\r\n   }\r\n   instance.props = reactive(props);\r\n   instance.attrs = attrs;   // 非响应式\r\n}\r\n\r\n// 初始化slots\r\nexport const initSlots = (instance, children) => {\r\n\r\n}\r\n\r\n// 创建一个setup的上下文\r\nconst createSetupContext = (instance) => {\r\n   return {\r\n      attrs: instance.attrs,\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose: (exposed) => instance.expose = exposed || {}\r\n   }\r\n}\r\n\r\n// 代理对象的handler\r\nconst PublicInstanceProxyHandles ={\r\n   get({_:instance}, key) {\r\n      const { setupState, props } = instance;\r\n      if(hasOwn(setupState, key)){  // 先查看setup返回值没有再去查看props\r\n         return setupState[key];\r\n      }else if(hasOwn(props, key)) {\r\n         return props[key];\r\n      }else {  // vue2语法\r\n\r\n      }\r\n   },\r\n   set({_:instance}, key, value) {\r\n      // 不允许对props进行修改\r\n      const { setupState, props } = instance;\r\n      if(hasOwn(setupState, key)){\r\n         setupState[key] = value;\r\n      }else if(hasOwn(props, key)) {\r\n         console.warn(\"Props are readonly\")\r\n         return false;\r\n      }else {  // vue2语法\r\n\r\n      }\r\n      return true;\r\n   }\r\n}\r\n\r\n// 启动setup\r\nexport const setupStatefulComponent = (instance) => {\r\n   // 核心是调用组件的setup方法\r\n   const compoent = instance.type;\r\n   const { setup } = compoent;\r\n   instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandles); // 代理上下文处理函数\r\n   if (setup) {\r\n      const setupContext = createSetupContext(instance);\r\n      let setupResult = setup(instance.props, setupContext);   // 获取setup返回的值\r\n      if (isFunction(setupResult)) {\r\n         instance.render = setupResult;\r\n      } else if (isObject(setupResult)) {\r\n         instance.setupState = setupResult;\r\n      }\r\n   }\r\n\r\n   if (!instance.render) {\r\n      // 如果没写render写了template，则需要模板编译 template -> render\r\n      instance.render = compoent.render;  // 没有写render函数，则使用组件的render\r\n   }\r\n}\r\n","import { createAppAPI } from './createAppAPI'\r\nimport { ShapeFlags } from \"@vue/shared\";\r\nimport { createComponentInstance, setupComponent } from './componentAPI';\r\nimport { ReactiveEffect } from '@vue/reactivity';\r\nimport { isSameVNodeType, normalizedVNode, Text } from './createVNode';\r\n\r\nfunction getSequence(seq: Array<any>): Array<any> {\r\n   let len = seq.length;\r\n   const result = [0];\r\n   let p = seq.slice(0);\r\n   let lastIndex;\r\n   let start;\r\n   let end;\r\n   let middle;\r\n\r\n   for (let i = 0; i < len; i++) {\r\n      const seqI = seq[i];\r\n\r\n      if (seqI !== 0) {\r\n         lastIndex = result[result.length - 1];\r\n         if (seq[lastIndex] < seqI) {\r\n            p[i] = lastIndex;\r\n            result.push(i);\r\n            continue;\r\n         }\r\n         // 二分查找 替换元素\r\n         start = 0;\r\n         end = result.length - 1;\r\n         while (start < end) {\r\n            middle = ((start + end) / 2) | 0;\r\n            if (seq[result[middle]] < seqI) {\r\n               start = middle + 1;\r\n            } else {\r\n               end = middle;\r\n            }\r\n\r\n            if (seqI < seq[result[start]]) {\r\n               p[i] = result[start - 1];\r\n               result[start] = i;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   let i = result.length;\r\n   let last = result[i - 1];\r\n   while (i > 0) {\r\n      i--;\r\n      result[i] = last;\r\n      last = p[last];\r\n   }\r\n\r\n   return result; // 输出索引\r\n}\r\n\r\nexport function createRenderer(renderOptions: any) {   // runtime-core   renderOptionsApi -> rootCompont -> rootPros -> container\r\n   const {  // renderOptions里面的方法\r\n      insert: hostInsert,\r\n      remove: hostRemove,\r\n      patchDOMProp: hostPatchProp,\r\n      createElement: hostCreateElement,\r\n      createText: hostCreateText,\r\n      setText: hostSetText,\r\n      setElementText: HostSetElementText,\r\n      parentNode: HostParentNode,\r\n      nextSibling: HostNextSilbing,\r\n      querySelector: HostQuerySelector\r\n   } = renderOptions;\r\n\r\n   // 创建渲染effect\r\n   const setupRenderEffect = (initialVNode, instance, container) => {\r\n      // 核心是调用render，数据变化，重新调用render\r\n      const componentUpdateFn = () => {\r\n         let { proxy } = instance;\r\n         if (!instance.isMounted) {\r\n            // 组件初始化流程\r\n            // 调用render方法（渲染页面的时候会进行取值操作，那么取值的时候会进行依赖收集，收集对应的依赖属性）\r\n            const subTree = instance.subTree = instance.render.call(proxy, proxy);  // 渲染时调用h方法\r\n\r\n            patch(null, subTree, container);\r\n            initialVNode.el = subTree.el;\r\n            instance.isMounted = true;\r\n         } else {\r\n            // 组件更新触发effect\r\n            // diff算法 比较前后两棵树\r\n            const prevTree = instance.subTree;\r\n            const nextTree = instance.render.call(proxy, proxy);\r\n\r\n            patch(prevTree, nextTree, container); // 比较两棵树\r\n         }\r\n      }\r\n      const effect = new ReactiveEffect(componentUpdateFn);\r\n      const update = effect.run.bind(effect);\r\n      update();\r\n   }\r\n   // 组件挂载的过程\r\n   const mountComponent = (initialVNode, container) => {\r\n      // 根据组件的虚拟dom，创造真实的dom，渲染到容器\r\n      // 1. 给组件创造一个实例\r\n      const instance = initialVNode.component = createComponentInstance(initialVNode);  // 给组件创造一个实例\r\n      // 2. 需要给组件实例进行赋值操作\r\n      setupComponent(instance);        // 给组件实例进行赋值操作\r\n      // 3. 调用render方法实现组件渲染逻辑， 如果依赖的数据发生变化，组件需要重新渲染\r\n\r\n      // 数据和视图是双向绑定的 如果数据变化，视图更新\r\n      // effect可以用在组件中，这样数据变化后可以自动重新执行effect函数\r\n      setupRenderEffect(initialVNode, instance, container); // 渲染effect\r\n\r\n   }\r\n\r\n   // 组件更新的过程\r\n   const updateComponent = (n1, n2, optimized) => {\r\n\r\n   }\r\n\r\n   // 处理组件\r\n   const processComponent = (n1, n2, container) => {\r\n      if (n1 == null) {   // 后期可以考虑缓存组件的情况 COMPONENT_KEPT_ALIVE\r\n         // 组件初始化挂载\r\n         mountComponent(n2, container);\r\n      } else {\r\n         // 组件更新挂载\r\n         // updateComponent(n1, n2, optimeized);\r\n         console.log(\"更新\")\r\n      }\r\n   }\r\n\r\n   // 子元素挂载\r\n   const mountChildren = (children, container) => {   // 容器为父元素\r\n      for (let i = 0; i < children.length; i++) {\r\n         const child = (children[i] = normalizedVNode(children[i]));\r\n\r\n         patch(null, child, container);\r\n      }\r\n   }\r\n\r\n   // 元素挂载的过程\r\n   const mountElemnt = (vnode, container, anchor) => {\r\n      // 给元素创建一个实例\r\n      // vnode中的children 可能是数组，对象数组，字符串数组，字符串\r\n      let { type, shapeFlag, props, children } = vnode;\r\n      let el = vnode.el = hostCreateElement(type);\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n         hostSetText(el, children);\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n         mountChildren(children, el);\r\n      }\r\n\r\n      // 处理属性\r\n      if (props) {\r\n         for (const key in props) {\r\n            const value = props[key];\r\n            hostPatchProp(el, key, null, value);\r\n         }\r\n      }\r\n      hostInsert(el, container, anchor);\r\n   }\r\n\r\n   // 对比元素中的属性\r\n   const patchProps = (oldProps, newProps, el) => {\r\n      if (oldProps === newProps) return;\r\n\r\n      for (const key in newProps) { // 新值与旧值不一样\r\n         const prev = oldProps[key];\r\n         const next = newProps[key];\r\n         if (prev !== next) {\r\n            hostPatchProp(el, key, prev, next);\r\n         }\r\n      }\r\n\r\n      for (const key in oldProps) { // 新值不存在的旧值\r\n         if (!(key in newProps)) {\r\n            hostPatchProp(el, key, oldProps[key], null);\r\n         }\r\n      }\r\n   }\r\n\r\n   // 卸载子节点\r\n   const unmountChildren = (children) => {\r\n      for (const child of children) {\r\n         unmount(child);\r\n      }\r\n   }\r\n\r\n   // 对比两个同为数组的子节点\r\n   const patchKeyedChildren = (c1, c2, container) => {\r\n      let i = 0;  // 从头结点开始\r\n      const l2 = c2.length;\r\n      let e1 = c1.length - 1;\r\n      let e2 = l2 - 1;\r\n\r\n      // 1. sync from start 从头开始一个个孩子来比较，遇到不同的节点就停止\r\n      while (i <= e1 && i <= e2) {  // 如果i和新的列表或者老的列表指针重合，说明比较完毕了\r\n         const n1 = c1[i];\r\n         const n2 = c2[i];\r\n\r\n         if (isSameVNodeType(n1, n2)) {\r\n            patch(n1, n2, container);\r\n         } else {\r\n            break;\r\n         }\r\n         i++;\r\n      }\r\n\r\n      // 2. sync from end 从末尾开始一个个子节点比较，遇到不同的节点就停止\r\n      while (i <= e1 && i <= e2) {  // 如果i和新的列表或者老的列表指针重合，说明比较完毕了\r\n         const n1 = c1[e1];\r\n         const n2 = c2[e2];\r\n         if (isSameVNodeType(n1, n2)) {\r\n            patch(n1, n2, container);\r\n         } else {\r\n            break;\r\n         }\r\n         e1--;\r\n         e2--;\r\n      }\r\n\r\n      // common sequence + mount\r\n      if (i > e1) { // 新增\r\n         if (i <= e2) { // i 与 e2 中间的元素是新增的\r\n            const nextPos = e2 + 1;\r\n            // 参照物的目的是找到插入的位置\r\n            const anchor = nextPos < l2 ? c2[nextPos].el : null;\r\n            while (i <= e2) {\r\n               patch(null, c2[i], container, anchor);\r\n               i++;\r\n            }\r\n         }\r\n      }\r\n      // common sequence + unmount\r\n      else if (i > e2) { // 删除\r\n         while (i <= e1) { // i 与 e2中间的元素是需要删除的\r\n            unmount(c1[i]);\r\n            i++;\r\n         }\r\n      }\r\n      // unknow sequence\r\n      else {   // 先找出复用序列再进行新增\r\n         const s1 = i;  // s1 -> e1 老的子节点列表\r\n         const s2 = i;  // s2 -> e2 新的子节点列表\r\n\r\n         // 根据新的子节点序列创造映射表\r\n         const keyToNewIndexMap = new Map();\r\n         for (i = s2; i <= e2; i++) {\r\n            const child = c2[i];\r\n            keyToNewIndexMap.set(child.key, i);\r\n         }\r\n\r\n         // 搜索旧的子节点序列能复用的序列索引\r\n         const toBePatched = e2 - s2 + 1; // 索引数组的长度\r\n         const newIndexToOldIndexMap = new Array(toBePatched).fill(0); // 储存可复用的索引+1 索引是旧节点在旧数组的索引 0表示不存在\r\n\r\n         for (i = s1; i <= e1; i++) {\r\n            const prevChild = c1[i];\r\n            let newIndex = keyToNewIndexMap.get(prevChild.key);\r\n\r\n            if (newIndex == undefined) { // 删除多余的 新子节点中不存在的旧子节点\r\n               unmount(prevChild);\r\n            } else {\r\n               newIndexToOldIndexMap[newIndex - s2] = i + 1;  // 保证不为0\r\n               patch(prevChild, c2[newIndex], container);   // 填表后还需比对\r\n            }\r\n         }\r\n\r\n         let queue = getSequence(newIndexToOldIndexMap); // 最长递增子序列算法求出可优化的某段子节点索引\r\n         let j = queue.length - 1;  // 倒序插入\r\n\r\n         for (i = toBePatched - 1; i >= 0; i--) {  // 倒序插入 \r\n            let lastIndex = s2 + i;\r\n            let lastChild = c2[lastIndex];\r\n            let anchor = lastIndex + 1 < c2.length ? c2[lastIndex + 1].el : null;\r\n            \r\n            if (newIndexToOldIndexMap[i] === 0) {  // 等于0的时候没有真实节点，需要创建真实节点插入\r\n               patch(null, lastChild, container, anchor);   // 创建一个h插入到f前面\r\n            } else {\r\n               // 可以优化 有些节点可以不移动\r\n               if (i !== queue[j]) {\r\n                  hostInsert(lastChild.el, container, anchor); // 将列表倒序插入\r\n               } else {\r\n                  j--; // 优化点  表示元素不需要移动\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // 对比子节点\r\n   const patchChildren = (n1, n2, el: Element) => {\r\n      const c1 = n1 && n1.children\r\n      const prevShapeFlag = n1.shapeFlag\r\n      const c2 = n2 && n2.children\r\n      const shapeFlag = n2.shapeFlag\r\n      // c1 和 c2 有哪些类型  (n1为空的情况在processElement阶段已经处理了)\r\n      // 1. 之前是数组现在是文本   2. 之前是数组，现在也是数组   3. 之前是文本，现在是数组  \r\n      // 4. 之前是文本现在是空    5. 之前是文本现在是文本     6. 之前是文本现在是空\r\n\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n         if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {  // 之前是数组\r\n            unmountChildren(c1); // 1（把情况1变成情况4）\r\n         }\r\n         if (c1 != c2) {  // 4 5\r\n            HostSetElementText(el, c2);\r\n         }\r\n      } else { // 现在是数组或空\r\n         if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n            if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) { // 2\r\n               // 对比两个数组的差异\r\n               patchKeyedChildren(c1, c2, el)\r\n            } else { // 之前是数组 现在是空文本\r\n               unmountChildren(c1);\r\n            }\r\n         } else {// 之前是文本  3 6 \r\n            if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n               HostSetElementText(el, '')\r\n            }\r\n            if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n               mountChildren(c2, el)\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // 对比元素\r\n   const patchElement = (n1, n2) => {\r\n      let el = n2.el = n1.el; // 比较元素一致则复用\r\n\r\n      const oldProps = n1.props || {}; // 比较属性\r\n      const newProps = n2.props || {};\r\n      patchProps(oldProps, newProps, el);\r\n\r\n      // 比较children，diff核心   diff算法是同级比较\r\n      patchChildren(n1, n2, el);\r\n   }\r\n\r\n   // 处理元素（一般是组件对应的返回值）\r\n   const processElement = (n1, n2, container, anchor) => {\r\n      if (n1 == null) {\r\n         // 初始化\r\n         mountElemnt(n2, container, anchor);\r\n      } else {\r\n         // diff\r\n         patchElement(n1, n2);\r\n      }\r\n   }\r\n\r\n   // 处理文本\r\n   const processText = (n1, n2, container) => { // 容器为父元素\r\n      if (n1 == null) {\r\n         // 初始化\r\n         let textNode = hostCreateText(n2.children);\r\n         n2.el = textNode;\r\n         hostInsert(textNode, container);\r\n      } else {\r\n\r\n      }\r\n   }\r\n\r\n   const unmount = (vnode) => {\r\n      hostRemove(vnode.el); // 删除真实节点\r\n   }\r\n\r\n   // 组件初次渲染和更新\r\n   const patch = (n1, n2, container, anchor?) => {\r\n      if (n1 == n2) {\r\n         return;\r\n      }\r\n\r\n      // 更新的patch 两个元素标签不一样 key也不一样，直接卸载旧的\r\n      if (n1 && !isSameVNodeType(n1, n2)) {\r\n         unmount(n1);\r\n         n1 = null;\r\n      }\r\n\r\n      const { shapeFlag, type } = n2;\r\n\r\n      switch (type) {\r\n         case Text:\r\n            processText(n1, n2, container);\r\n            break;\r\n         default:\r\n            if (shapeFlag & ShapeFlags.COMPONENT) {  // 判断渲染的是否为组件 \r\n               processComponent(n1, n2, container);\r\n            } else if (shapeFlag & ShapeFlags.ELEMENT) { // 判断渲染的是否为元素\r\n               processElement(n1, n2, container, anchor);\r\n            }\r\n      }\r\n   }\r\n\r\n   // 将虚拟节点变成真实节点渲染到容器中\r\n   const render = (vnode, container) => {\r\n      if (vnode == null) {\r\n         if (container._vnode) {   // vnode为空 container有_vnode属性 此时为卸载组件\r\n            // unmount()\r\n         }\r\n      } else {\r\n         // 包括初次渲染和更新 后续会更新patch \r\n         patch(container._vnode || null, vnode, container)// 后续更新 prevNode nextNode container\r\n      }\r\n      container._vnode = vnode;  // 渲染过后把vnode与container绑定\r\n   }\r\n\r\n   return {\r\n      createApp: createAppAPI(render),\r\n      render\r\n   };\r\n}","// 需要涵盖dom操作的api、属性操作的api，将这些api传入runtime-core中\r\n\r\n// runtime-core在操作中不需要依赖于平台代码（平台代码时传入的）\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchDOMProp } from './patchProp'\r\nimport { createRenderer } from '@vue/runtime-core'\r\n\r\nconst renderOptions = Object.assign(nodeOps, { patchDOMProp })\r\n\r\nexport const createApp = (component: any, rootProps?: any) => {\r\n   // 创建渲染器\r\n   const { createApp } = createRenderer(renderOptions);  // 传入环境API\r\n   let app = createApp(component, rootProps);\r\n   let { mount } = app; // 获取core中的mount\r\n   app.mount = function (container) {  // 重写mount\r\n      container = nodeOps.querySelector(container);\r\n      container.innerHTML = '';\r\n      mount(container);\r\n   }\r\n   return app;\r\n}\r\n\r\nexport * from '@vue/runtime-core'\r\n"],"names":[],"mappings":"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"}