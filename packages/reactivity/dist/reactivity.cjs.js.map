{"version":3,"file":"reactivity.cjs.js","sources":["../../shared/src/index.ts","../src/dep.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["/**\r\n * @private\r\n * 合并对象\r\n */\r\nexport const extend = Object.assign;\r\n\r\n/**\r\n * @private\r\n * 判断是否为对象\r\n */\r\nexport const isObject = (value: unknown): value is {} => value instanceof Object;\r\n\r\n/**\r\n * @private\r\n * 判断是否为数组\r\n */\r\nexport const isArray = Array.isArray;\r\n\r\n/**\r\n * @private\r\n * 判断是否为Symbol\r\n */\r\nexport const isSymbol = (value: unknown): value is symbol => typeof value === \"symbol\";\r\n\r\n/**\r\n * @private\r\n * 判断是否为数字\r\n */\r\nexport const isNumber = (value: unknown): value is number => typeof value === \"number\";\r\n\r\n/**\r\n * @private\r\n * 判断是否为字符串\r\n */\r\nexport const isString = (value: unknown): value is string => typeof value === \"string\";\r\n\r\n/**\r\n * @private\r\n * 判断是否为函数\r\n */\r\nexport const isFunction = (value: unknown): value is Function => typeof value === \"function\";\r\n\r\n/**\r\n * @private\r\n * 判断key值是否为数字类型\r\n */\r\nexport const isIntegerKey = (key: unknown): boolean => isString(key) &&\r\n   key !== 'NaN' &&\r\n   key[0] !== '-' &&\r\n   '' + parseInt(key, 10) === key;\r\n\r\nlet own = Object.prototype.hasOwnProperty;\r\n/**\r\n * @private\r\n * 判断key是否为target对象上的属性\r\n */\r\nexport const hasOwn = (target: object, key: string | symbol): boolean => own.call(target, key);\r\n\r\n/**\r\n * @private\r\n * 判断两个value是否一致\r\n */\r\nexport const hasChanged = (oldValue: any, value: any): boolean => !Object.is(value, oldValue);\r\n\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n * 把烤肉串命名方式转换成驼峰命名方式\r\n */\r\nexport const camelize = (value: string): string => {\r\n   return value.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\")\r\n}\r\n\r\n// on+一个大写字母格式开头\r\nexport const isOn = (key: any): boolean => /^on[A-Z]/.test(key);\r\n\r\n/**\r\n * @private\r\n * 首字母大写\r\n */\r\nexport const capitalize = (value: string):string => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\n/**\r\n * @private\r\n * 添加 on 前缀，并且首字母大写\r\n */\r\nexport const toHandlerKey = (value: string):string => value ? `on${capitalize(value)}` : ``;\r\n\r\nexport const enum ShapeFlags { // 二进制移位\r\n   ELEMENT = 1,\r\n   FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件\r\n   STATEFUL_COMPONENT = 1 << 2,   // 普通组件\r\n   TEXT_CHILDREN = 1 << 3,        // 子节点是文本\r\n   ARRAY_CHILDREN = 1 << 4,       // 子节点是数组\r\n   SLOTS_CHILDREN = 1 << 5,       // 组件插槽\r\n   TELPRORT = 1 << 6,             // teleport组件\r\n   SUSPENSE = 1 << 7,             // suspense组件\r\n   COMPONENT = ShapeFlags.STATEFUL_COMPONENT | FUNCTIONAL_COMPONENT    // 组件\r\n}\r\n\r\n// component = 010 | 100 = 110\r\n// component & FUN = 010  compoent & STAT = 100\r\n// 与其他人 与算法 得出来的都为0  这种做法可以确定权限的关系 \r\n","import { ReactiveEffect } from \"./effect\";\r\n\r\nexport function createDep (effects:Array<ReactiveEffect>):Set<ReactiveEffect<any>> { // 创建依赖收集\r\n   const dep = new Set(effects);\r\n\r\n   return dep;\r\n}","import { extend, isArray, isIntegerKey } from \"@vue/shared\";\r\nimport { createDep } from \"./dep\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\n\r\nlet activeEffect: any;   // 当前正在执行的effect\r\n\r\nexport class ReactiveEffect<T = any>{\r\n   active: boolean = true; // 是否是激活状态 \r\n   deps: any = [];   // 让effect记录他依赖了哪些属性，同时记录当前属性依赖了哪个effect\r\n   parent: ReactiveEffect | undefined = undefined;\r\n   fn: Function;\r\n   scheduler: any;\r\n\r\n   constructor(fn: Function, scheduler?: any) {\r\n      this.fn = fn;\r\n      this.scheduler = scheduler;\r\n   }\r\n\r\n   run() {  // 调用run会让fn执行\r\n      if (!this.active) {  // 如果处于非激活状态，调用run方法会默认调用fn函数\r\n         return this.fn();\r\n      }\r\n\r\n      let parent = activeEffect;\r\n\r\n      while (parent) {\r\n         if (parent === this) {\r\n            return;\r\n         }\r\n         parent = parent.parent;\r\n      }\r\n\r\n      try {\r\n         this.parent = activeEffect;\r\n         activeEffect = this;\r\n         return this.fn()  // 取值 new Proxy 会执行get方法（收集依赖）\r\n      } finally {\r\n         activeEffect = this.parent;\r\n         this.parent = undefined;\r\n      }\r\n   }\r\n\r\n   stop() {    // 让effect和dep取消关联\r\n      if (this.active) {\r\n         cleanupEffect(this); // 移除dep上存储的effect依赖\r\n      }\r\n      this.active = false;\r\n   }\r\n}\r\n\r\n// 清空依赖收集\r\nfunction cleanupEffect(effect) {\r\n   const { deps } = effect;\r\n   if (deps.length) {\r\n      for (let i = 0; i < deps.length; i++) {\r\n         deps[i].delete(effect); // 让属性对应的effect移除掉\r\n      }\r\n      deps.length = 0;\r\n   }\r\n}\r\n\r\nexport function effect(fn: any, options: any = {}) {\r\n   if (fn.effect) {\r\n      fn = fn.effect.fn;\r\n   }\r\n   // 把effect变成一个响应式的effect，可以做到数据变化后重新执行\r\n   const _effect = new ReactiveEffect(fn);\r\n\r\n   if (options) {\r\n      extend(_effect, options);\r\n   }\r\n\r\n   if (!options || !options.lazy) { // 如果不为lazy默认执行一次\r\n      _effect.run();\r\n   }\r\n\r\n   const runner = _effect.run.bind(_effect);\r\n\r\n   runner.effect = _effect;   // 给runner添加effect实现 就是effect实例\r\n\r\n   return runner;\r\n}\r\n\r\n// 让某个对象中的属性收集它对应的effect函数\r\nconst targetMap = new Map()    // 把收集了依赖的对象放入map\r\nexport function track(target: any, key: Symbol | string, type: TrackOpTypes) {\r\n   if (!activeEffect) {\r\n      return;\r\n   }\r\n\r\n   let depsMap = targetMap.get(target);\r\n\r\n   if (!depsMap) {  // 查看是否把当前这个对象放入依赖weakmap，没有则创建一个map放入作为值\r\n      targetMap.set(target, (depsMap = new Map()));\r\n   }\r\n\r\n   let dep = depsMap.get(key);\r\n\r\n   if (!dep) {   // 查看寻找的这个对象里面是否把当前的key放入map，没有则创建一个set放入作为值\r\n      depsMap.set(key, (dep = new Set()));\r\n   }\r\n\r\n   trackEffects(dep);\r\n}\r\n\r\n// 查看set是否有放入了effect，没有则把当前的effect放入set\r\nexport function trackEffects(dep) {\r\n   if (!dep.has(activeEffect)) {\r\n      dep.add(activeEffect);\r\n      (activeEffect as any).deps.push(dep);\r\n   }\r\n}\r\n\r\n// 触发执行依赖，添加元素时，也自动添加effect，并收集依赖\r\nexport function trigger(target: any, key: any, type?: TriggerOrTypes, newVal?: any, oldVal?: any) {\r\n   // 如果target没有被收集依赖则忽略\r\n   const depsMap = targetMap.get(target);\r\n   if (!depsMap) {\r\n      return;\r\n   }\r\n\r\n   // 将所有要执行的effect全部放到一个集合中，最终一起执行\r\n   const deps = [];\r\n\r\n   if (key === \"length\" && isArray(target)) {// 判断为数组，且更新的是长度\r\n      // 如果对应的长度（key）有依赖收集则需要更新\r\n      depsMap.forEach((dep: Array<any>, _key: any) => {// 如果更改的长度小于收集的索引，那么这个索引也需要触发effect进行更新\r\n         if (key === \"length\" || _key >= newVal) {// _key为收集的索引，dep为被收集的索引所有effect的Set集合\r\n            deps.push(dep);\r\n         }\r\n      });\r\n      switch (type) { // 数组修改超出边界\r\n         case TriggerOrTypes.ADD:\r\n            if (isArray(target) && isIntegerKey(key)) {\r\n               // 修改数组中的某个索引(边界之外的，没有赋值所以前面判断为新增)\r\n               deps.push(depsMap.get(\"length\"));   // 触发长度依赖更新\r\n            }\r\n      }\r\n   } else {\r\n      // 对象\r\n      if (key !== undefined) {\r\n         deps.push(depsMap.get(key));   // 拿到具体的dep合集并匹配进新合集\r\n      }\r\n   }\r\n\r\n   const effects: Array<ReactiveEffect> = [];\r\n\r\n   // dep是Set数据类型，里面包含 activeEffect\r\n   for (const dep of deps) {\r\n      if (dep) {\r\n         effects.push(...dep);\r\n      }\r\n   }\r\n\r\n   triggerEffects(createDep(effects));\r\n}\r\n\r\n// 执行所有effect\r\nexport function triggerEffects(dep: Set<ReactiveEffect<any>>) {\r\n   for (const effect of dep) {\r\n      if (effect !== activeEffect) {// 如果当前执行的effect和要执行的effect是同一个就不执行，防止循环\r\n         if (effect.scheduler) {\r\n            effect.scheduler()\r\n         } else {\r\n            effect.run();\r\n         }\r\n      }\r\n   }\r\n}\r\n","// 实现handler\r\n// 1. 是否仅读    2. 是否深度\r\n\r\nimport { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive, readonly } from \"./reactive\";\r\n\r\ntype GetFunction = (target: any, p: string | symbol, receiver: any) => any;\r\ntype SetFunction = (target: any, p: string | symbol, value: any, receiver: any) => boolean;\r\n\r\n// Getter\r\nconst get = createGetter(false, false);\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true, false);\r\nconst shallowReadonlyGet = createGetter(true, true);\r\n\r\n// Setter\r\nconst set = createSetter(false);\r\nconst shallowSet = createSetter(true);\r\n\r\nlet readonlyObject = {  // 只读对象的Setter方法\r\n   set: function (target: any, key: any, receiver: any):boolean {\r\n      console.warn(`${key} is a read-only attribute and cannot be modified`);\r\n      return true;\r\n   }\r\n}\r\n\r\nfunction createGetter(isReadOnly: boolean = false, shallow: boolean = false): GetFunction { // 拦截获取\r\n   return function get(target, key, reciver) {  // reciver为代理对象\r\n      // proxy + reflect\r\n      // Reflect方法具备返回值\r\n      const res = Reflect.get(target, key, reciver);\r\n\r\n      if (key === \"__v_isReactive\" || key === \"__v_isReadonly\") {\r\n         return res;\r\n      }\r\n\r\n      if (!isReadOnly) {\r\n         // 收集依赖，等数据变化后更新视图\r\n         track(target, key, TrackOpTypes.GET);\r\n      }\r\n\r\n      if (shallow) {   // 浅层响应式直接返回对象\r\n         return res;\r\n      }\r\n\r\n      if (isObject(res)) {  // 如果是对象继续递归，Vue2一上来就递归; Vue3是当取值时会进行代理，Vue3的代理模式是懒代理\r\n         return isReadOnly ? readonly(res) : reactive(res);\r\n      }\r\n\r\n      return res;\r\n   }\r\n}\r\n\r\nfunction createSetter(shallow: boolean): SetFunction {  // 拦截设置\r\n   return function set(target, key, value, reciver):boolean {   // target[key] = value\r\n      // 当数据更新时，通知所有对应的属性的effect重新执行\r\n\r\n      // 区分新增还是修改执行的set\r\n      let oldVal = target[key];\r\n      if (key === \"__v_isReactive\" || key === \"__v_isReadonly\") {   // 不允许修改内置属性\r\n         console.warn(`The ${key} attribute is a built-in attribute and cannot be changed.`);\r\n         return oldVal;\r\n      }\r\n      const res = Reflect.set(target, key, value, reciver);    // 用Reflect比直接target[key] = value 的做法更好\r\n      let hasKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\r\n\r\n\r\n      if (!hasKey) {\r\n         // 新增\r\n         trigger(target, key, TriggerOrTypes.ADD, value)\r\n      } else if (hasChanged(oldVal, value)) {\r\n         //修改, 并且保证修改的值与之前的不一样\r\n         trigger(target, key, TriggerOrTypes.SET, value, oldVal)\r\n      }\r\n\r\n      return res;\r\n   }\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<any> = {\r\n   get,\r\n   set\r\n};\r\n\r\nexport const shallowReactiveHandlers: ProxyHandler<any> = {\r\n   get: shallowGet,\r\n   set: shallowSet\r\n};\r\n\r\nexport const readonlyHandlers: ProxyHandler<any> = extend({\r\n   get: readonlyGet,\r\n\r\n}, readonlyObject);\r\n\r\nexport const shallowReadonlyHandlers: ProxyHandler<any> = extend({\r\n   get: shallowReadonlyGet,\r\n}, readonlyObject);","// 各个方法区别 : 1. 是不是仅读     2. 是不是深度\r\nimport { isObject } from '@vue/shared'\r\nimport {\r\n   mutableHandlers,\r\n   shallowReactiveHandlers,\r\n   readonlyHandlers,\r\n   shallowReadonlyHandlers\r\n} from './baseHandlers'\r\n\r\nexport function reactive<T>(target: T):T {\r\n   target[\"__v_isReactive\"] = true;\r\n   target[\"__v_isReadonly\"] = false;\r\n   return createReactiveObject(target, false, mutableHandlers)\r\n}\r\n\r\nexport function shallowReactive<T>(target: T):T {\r\n   target[\"__v_isReactive\"] = true;\r\n   target[\"__v_isReadonly\"] = false;\r\n   return createReactiveObject(target, false, shallowReactiveHandlers)\r\n}\r\n\r\nexport function readonly<T>(target: T):T {\r\n   target[\"__v_isReactive\"] = false;\r\n   target[\"__v_isReadonly\"] = true;\r\n   return createReactiveObject(target, true, readonlyHandlers)\r\n}\r\n\r\nexport function shallowReadonly<T extends object>(target: T):T {\r\n   target[\"__v_isReactive\"] = false;\r\n   target[\"__v_isReadonly\"] = true;\r\n   return createReactiveObject(target, false, shallowReadonlyHandlers)\r\n}\r\n\r\n// 拦截数据的读取和数据的修改\r\nconst reactiveMap = new WeakMap();  // 弱引用，会自动进行垃圾回收不会造成内存泄漏，key是对象\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject<T extends object>(target: T, isReadOnly: boolean, handlers: ProxyHandler<T>): T {\r\n   // reactive API 只拦截对象属性\r\n   if (!isObject(target)) {\r\n      return target;\r\n   }\r\n\r\n   // 如果对象已经被代理了直接拿到代理对象，如果没有被代理，也要判断是不是被深度或仅读代理 又要仅读或深度代理\r\n   const proxyMap = isReadOnly ? readonlyMap : reactiveMap;\r\n\r\n   const existProxy = proxyMap.get(target);\r\n   if (existProxy) {\r\n      return existProxy;\r\n   }\r\n\r\n   const proxy = new Proxy(target, handlers);\r\n   proxyMap.set(target, proxy); //  将将要代理的对象和对应的代理对象存起来\r\n\r\n   return proxy;\r\n}","import { hasChanged, isArray, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive } from \"./reactive\";\r\n\r\n// 把普通属性改为响应式属性\r\nexport function ref(value: any) {\r\n   return createRef(value, false);\r\n}\r\n\r\n// 与ref类似但是响应式是浅响应式\r\nexport function shallowRef(value: any) {\r\n   return createRef(value, true);\r\n}\r\n\r\n// 创建RefImpl的实例\r\nfunction createRef(rawValue: any, shallow: boolean) {\r\n   if (isRef(rawValue)) {\r\n      return rawValue\r\n   }\r\n   return new RefImpl(rawValue, shallow)\r\n}\r\n\r\n// 判断值是否为ref类型--即判断是否为RefImpl或ObjectRefImpl类的实例\r\nexport function isRef(r: any) {\r\n   return !!(r && r.__v_isRef === true);\r\n}\r\n\r\n// 把对象中的某个key变成响应式\r\nexport function toRef(object: Object|Array<any>, key: any, defaultValue?: any) {\r\n   const val = object[key];\r\n   return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);\r\n}\r\n\r\n// 把一个对象中的所有的key转换成响应式\r\nexport function toRefs(object: Object|Array<any>) {\r\n   if (!isProxy(object)) {    //(process.env.NODE_ENV !== 'production') &&\r\n      console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n   }\r\n   const ret = isArray(object) ? new Array(object.length) : {};\r\n   for (const key in object) {\r\n      ret[key] = toRef(object, key);\r\n   }\r\n   return ret;\r\n}\r\n\r\n// 拿到原始数据\r\nexport function toRaw(observed: any) {\r\n   const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n   return raw ? toRaw(raw) : observed;\r\n}\r\n\r\n// 如果不为shallow且value为对象则使用reactive方法响应式整个value\r\nconst toReactive = (value: any) => isObject(value) ? reactive(value) : value;\r\n\r\n// 判断它是否已经被ref或reactive包装过\r\nfunction isProxy(value: Object|Array<any>) {\r\n   return isReactive(value) || isReadonly(value);\r\n}\r\nfunction isReactive(value: Object|Array<any>) {\r\n   if (isReadonly(value)) {\r\n      return isReactive(value[\"__v_raw\" /* RAW */]);\r\n   }\r\n   return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value: Object|Array<any>) {\r\n   return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\n\r\n\r\nclass RefImpl {\r\n   _value: any;\r\n   __v_isShallow: boolean;    // 是否为浅响应\r\n   dep: any;                  // 对应的effect\r\n   __v_isRef: boolean;        // 产生的实例会被添加该属性，表示是一个ref类型的数据\r\n   __v_raw: any;              // 对应原本的value\r\n\r\n   constructor(value: any, shallow: boolean) {\r\n      this._value = shallow ? value : toReactive(value);\r\n      this.__v_isShallow = shallow;\r\n      this.dep = undefined;\r\n      this.__v_isRef = true;\r\n      this.__v_raw = shallow ? value : toRaw(value);\r\n   }\r\n\r\n   // 类属性访问器\r\n   get value() {\r\n      track(this, \"value\", TrackOpTypes.GET)\r\n      return this._value;\r\n   }\r\n   set value(newVal) {\r\n      // newVal = this.__v_isShallow ? newVal : toRaw(newVal);\r\n      if (hasChanged(newVal, this.__v_raw)) {\r\n         this.__v_raw = newVal;\r\n         this._value = this.__v_isShallow ? newVal : toReactive(newVal);\r\n         trigger(this, \"value\", TriggerOrTypes.SET, newVal);\r\n      }\r\n   }\r\n}\r\n\r\nclass ObjectRefImpl {\r\n   _object: Object|Array<any>\r\n   _key: any\r\n   _defaultValue: any\r\n   __v_isRef: boolean\r\n\r\n   constructor(_object: Object|Array<any>, _key: any, _defaultValue: any) {\r\n      this._object = _object;\r\n      this._key = _key;\r\n      this._defaultValue = _defaultValue;\r\n      this.__v_isRef = true;\r\n   }\r\n\r\n   get value() {\r\n      const val = this._object[this._key];\r\n      return val === undefined ? this._defaultValue : val;\r\n   }\r\n\r\n   set value(newVal) {\r\n      this._object[this._key] = newVal;\r\n   }\r\n}","import { isFunction } from \"@vue/shared\";\r\nimport { ReactiveEffect, track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { toRaw } from \"./ref\";\r\n\r\ntype BasicType = number | string | boolean | undefined | null | Symbol;\r\ninterface IAccessorOptions{\r\n   get: Function,\r\n   set: Function\r\n} \r\ntype computedVar = Function | IAccessorOptions;\r\n\r\nclass ComputedRefImpl {\r\n   _setter: Function;\r\n   _dirty: boolean;  // 脏数据标记\r\n   dep: any = undefined;   // 存储dep\r\n   effect: ReactiveEffect; // 计算属性包装的effect\r\n   __v_isRef: boolean;  // ref标记\r\n   _value: BasicType;   // 存储value值\r\n   constructor(getter: Function, _setter: Function, isReadonly: boolean) {\r\n      this._setter = _setter;\r\n      this._dirty = true;\r\n      this.__v_isRef = true;\r\n\r\n      this.effect = new ReactiveEffect(getter, () => {   // 计算属性的依赖值变化，不要重新执行计算属性的effect，而是把数据标记为脏数据\r\n         if (!this._dirty) {\r\n            this._dirty = true;\r\n            trigger(this, \"value\", TriggerOrTypes.SET);\r\n         }\r\n      });\r\n      this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n   }\r\n\r\n   get value() {\r\n      const self = toRaw(this);\r\n      track(self, \"value\", TrackOpTypes.GET);\r\n      if (self._dirty) {\r\n         self._dirty = false;\r\n         self._value = self.effect.run(); // 将结果缓存到effect中，这样就不需要每次都run\r\n      }\r\n      return self._value;\r\n   }\r\n\r\n   set value(newValue: BasicType) {\r\n      this._setter(newValue);\r\n   }\r\n}\r\n\r\nexport function computed(getterOrOptions: computedVar) {\r\n   let getter: Function;\r\n   let setter: Function;\r\n   let onlyGetter = isFunction(getterOrOptions);\r\n\r\n   if (isFunction(getterOrOptions)) {\r\n      getter = getterOrOptions;\r\n      setter = () => {\r\n         console.warn(\"computed value is readonly\")\r\n      }\r\n   } else {\r\n      getter = getterOrOptions.get;\r\n      setter = getterOrOptions.set;\r\n   }\r\n\r\n   return new ComputedRefImpl(getter, setter, onlyGetter || !setter);\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;;AAGG;AACI,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAEpC;;;AAGG;AACI,MAAM,QAAQ,GAAG,CAAC,KAAc,KAAkB,KAAK,YAAY,MAAM,CAAC;AAEjF;;;AAGG;AACI,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAcrC;;;AAGG;AACI,MAAM,QAAQ,GAAG,CAAC,KAAc,KAAsB,OAAO,KAAK,KAAK,QAAQ,CAAC;AAEvF;;;AAGG;AACI,MAAM,UAAU,GAAG,CAAC,KAAc,KAAwB,OAAO,KAAK,KAAK,UAAU,CAAC;AAE7F;;;AAGG;AACI,MAAM,YAAY,GAAG,CAAC,GAAY,KAAc,QAAQ,CAAC,GAAG,CAAC;AACjE,IAAA,GAAG,KAAK,KAAK;AACb,IAAA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG;IACd,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC;AAElC,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AAC1C;;;AAGG;AACI,MAAM,MAAM,GAAG,CAAC,MAAc,EAAE,GAAoB,KAAc,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAE/F;;;AAGG;AACI,MAAM,UAAU,GAAG,CAAC,QAAa,EAAE,KAAU,KAAc,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAsC9F;AACA;AACA;;ACpGM,SAAU,SAAS,CAAE,OAA6B,EAAA;AACrD,IAAA,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;AAE7B,IAAA,OAAO,GAAG,CAAC;AACd;;ACFA,IAAI,YAAiB,CAAC;MAET,cAAc,CAAA;AACxB,IAAA,MAAM,GAAY,IAAI,CAAC;AACvB,IAAA,IAAI,GAAQ,EAAE,CAAC;IACf,MAAM,GAA+B,SAAS,CAAC;AAC/C,IAAA,EAAE,CAAW;AACb,IAAA,SAAS,CAAM;IAEf,WAAY,CAAA,EAAY,EAAE,SAAe,EAAA;AACtC,QAAA,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACb,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC7B;IAED,GAAG,GAAA;AACA,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC;AACnB,SAAA;QAED,IAAI,MAAM,GAAG,YAAY,CAAC;AAE1B,QAAA,OAAO,MAAM,EAAE;YACZ,IAAI,MAAM,KAAK,IAAI,EAAE;gBAClB,OAAO;AACT,aAAA;AACD,YAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACzB,SAAA;QAED,IAAI;AACD,YAAA,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;YAC3B,YAAY,GAAG,IAAI,CAAC;AACpB,YAAA,OAAO,IAAI,CAAC,EAAE,EAAE,CAAA;AAClB,SAAA;AAAS,gBAAA;AACP,YAAA,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAA,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;AAC1B,SAAA;KACH;IAED,IAAI,GAAA;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;AACd,YAAA,aAAa,CAAC,IAAI,CAAC,CAAC;AACtB,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACtB;AACH,CAAA;AAED;AACA,SAAS,aAAa,CAAC,MAAM,EAAA;AAC1B,IAAA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;IACxB,IAAI,IAAI,CAAC,MAAM,EAAE;AACd,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACzB,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClB,KAAA;AACJ,CAAC;SAEe,MAAM,CAAC,EAAO,EAAE,UAAe,EAAE,EAAA;IAC9C,IAAI,EAAE,CAAC,MAAM,EAAE;AACZ,QAAA,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;AACpB,KAAA;;AAED,IAAA,MAAM,OAAO,GAAG,IAAI,cAAc,CAAC,EAAE,CAAC,CAAC;AAEvC,IAAA,IAAI,OAAO,EAAE;AACV,QAAA,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC3B,KAAA;IAED,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QAC5B,OAAO,CAAC,GAAG,EAAE,CAAC;AAChB,KAAA;IAED,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAEzC,IAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;AAExB,IAAA,OAAO,MAAM,CAAC;AACjB,CAAC;AAED;AACA,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAA;SACX,KAAK,CAAC,MAAW,EAAE,GAAoB,EAAE,IAAkB,EAAA;IACxE,IAAI,CAAC,YAAY,EAAE;QAChB,OAAO;AACT,KAAA;IAED,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpC,IAAA,IAAI,CAAC,OAAO,EAAE;AACX,QAAA,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC;AAC/C,KAAA;IAED,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAE3B,IAAA,IAAI,CAAC,GAAG,EAAE;AACP,QAAA,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC;AACtC,KAAA;IAED,YAAY,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC;AAED;AACM,SAAU,YAAY,CAAC,GAAG,EAAA;AAC7B,IAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;AACzB,QAAA,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACrB,QAAA,YAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,KAAA;AACJ,CAAC;AAED;AACM,SAAU,OAAO,CAAC,MAAW,EAAE,GAAQ,EAAE,IAAqB,EAAE,MAAY,EAAE,MAAY,EAAA;;IAE7F,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,CAAC,OAAO,EAAE;QACX,OAAO;AACT,KAAA;;IAGD,MAAM,IAAI,GAAG,EAAE,CAAC;IAEhB,IAAI,GAAG,KAAK,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;;QAEtC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAe,EAAE,IAAS,KAAI;YAC5C,IAAI,GAAG,KAAK,QAAQ,IAAI,IAAI,IAAI,MAAM,EAAE;AACrC,gBAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,aAAA;AACJ,SAAC,CAAC,CAAC;QACH,QAAQ,IAAI;AACT,YAAA,KAAA,CAAA;gBACG,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE;;AAEvC,oBAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnC,iBAAA;AACN,SAAA;AACH,KAAA;AAAM,SAAA;;QAEJ,IAAI,GAAG,KAAK,SAAS,EAAE;AACpB,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9B,SAAA;AACH,KAAA;IAED,MAAM,OAAO,GAA0B,EAAE,CAAC;;AAG1C,IAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACrB,QAAA,IAAI,GAAG,EAAE;AACN,YAAA,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACvB,SAAA;AACH,KAAA;AAED,IAAA,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;AACtC,CAAC;AAED;AACM,SAAU,cAAc,CAAC,GAA6B,EAAA;AACzD,IAAA,KAAK,MAAM,MAAM,IAAI,GAAG,EAAE;AACvB,QAAA,IAAI,MAAM,KAAK,YAAY,EAAE;YAC1B,IAAI,MAAM,CAAC,SAAS,EAAE;gBACnB,MAAM,CAAC,SAAS,EAAE,CAAA;AACpB,aAAA;AAAM,iBAAA;gBACJ,MAAM,CAAC,GAAG,EAAE,CAAC;AACf,aAAA;AACH,SAAA;AACH,KAAA;AACJ;;ACxKA;AAWA;AACA,MAAM,GAAG,GAAG,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACvC,MAAM,UAAU,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7C,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9C,MAAM,kBAAkB,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAEpD;AACA,MAAM,GAAG,GAAG,YAAY,CAAM,CAAC,CAAC;AAChC,MAAM,UAAU,GAAG,YAAY,CAAK,CAAC,CAAC;AAEtC,IAAI,cAAc,GAAG;AAClB,IAAA,GAAG,EAAE,UAAU,MAAW,EAAE,GAAQ,EAAE,QAAa,EAAA;AAChD,QAAA,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA,gDAAA,CAAkD,CAAC,CAAC;AACvE,QAAA,OAAO,IAAI,CAAC;KACd;CACH,CAAA;AAED,SAAS,YAAY,CAAC,UAAA,GAAsB,KAAK,EAAE,UAAmB,KAAK,EAAA;AACxE,IAAA,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAA;;;AAGrC,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;AAE9C,QAAA,IAAI,GAAG,KAAK,gBAAgB,IAAI,GAAG,KAAK,gBAAgB,EAAE;AACvD,YAAA,OAAO,GAAG,CAAC;AACb,SAAA;QAED,IAAI,CAAC,UAAU,EAAE;;AAEd,YAAA,KAAK,CAAC,MAAM,EAAE,IAAsB,CAAC;AACvC,SAAA;QAED,IAAI,OAAO,EAAE;AACV,YAAA,OAAO,GAAG,CAAC;AACb,SAAA;AAED,QAAA,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;AAChB,YAAA,OAAO,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpD,SAAA;AAED,QAAA,OAAO,GAAG,CAAC;AACd,KAAC,CAAA;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,OAAgB,EAAA;IACnC,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAA;;;AAI5C,QAAA,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,GAAG,KAAK,gBAAgB,IAAI,GAAG,KAAK,gBAAgB,EAAE;AACvD,YAAA,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,CAAA,yDAAA,CAA2D,CAAC,CAAC;AACpF,YAAA,OAAO,MAAM,CAAC;AAChB,SAAA;AACD,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AACrD,QAAA,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAGtG,IAAI,CAAC,MAAM,EAAE;;AAEV,YAAA,OAAO,CAAC,MAAM,EAAE,GAAG,EAAsB,CAAA,YAAA,KAAK,CAAC,CAAA;AACjD,SAAA;AAAM,aAAA,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;;YAEnC,OAAO,CAAC,MAAM,EAAE,GAAG,eAAsB,KAAa,CAAC,CAAA;AACzD,SAAA;AAED,QAAA,OAAO,GAAG,CAAC;AACd,KAAC,CAAA;AACJ,CAAC;AAEM,MAAM,eAAe,GAAsB;IAC/C,GAAG;IACH,GAAG;CACL,CAAC;AAEK,MAAM,uBAAuB,GAAsB;AACvD,IAAA,GAAG,EAAE,UAAU;AACf,IAAA,GAAG,EAAE,UAAU;CACjB,CAAC;AAEK,MAAM,gBAAgB,GAAsB,MAAM,CAAC;AACvD,IAAA,GAAG,EAAE,WAAW;CAElB,EAAE,cAAc,CAAC,CAAC;AAEZ,MAAM,uBAAuB,GAAsB,MAAM,CAAC;AAC9D,IAAA,GAAG,EAAE,kBAAkB;CACzB,EAAE,cAAc,CAAC;;AClGlB;AASM,SAAU,QAAQ,CAAI,MAAS,EAAA;AAClC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;AAChC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC;IACjC,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,CAAC,CAAA;AAC9D,CAAC;AAEK,SAAU,eAAe,CAAI,MAAS,EAAA;AACzC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;AAChC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC;IACjC,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,uBAAuB,CAAC,CAAA;AACtE,CAAC;AAEK,SAAU,QAAQ,CAAI,MAAS,EAAA;AAClC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC;AACjC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;IAChC,OAAO,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAA;AAC9D,CAAC;AAEK,SAAU,eAAe,CAAmB,MAAS,EAAA;AACxD,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,KAAK,CAAC;AACjC,IAAA,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;IAChC,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,uBAAuB,CAAC,CAAA;AACtE,CAAC;AAED;AACA,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;AAClC,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;SAClB,oBAAoB,CAAmB,MAAS,EAAE,UAAmB,EAAE,QAAyB,EAAA;;AAE7G,IAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACpB,QAAA,OAAO,MAAM,CAAC;AAChB,KAAA;;IAGD,MAAM,QAAQ,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC;IAExD,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACxC,IAAA,IAAI,UAAU,EAAE;AACb,QAAA,OAAO,UAAU,CAAC;AACpB,KAAA;IAED,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC1C,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAE5B,IAAA,OAAO,KAAK,CAAC;AAChB;;ACjDA;AACM,SAAU,GAAG,CAAC,KAAU,EAAA;AAC3B,IAAA,OAAO,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAClC,CAAC;AAED;AACM,SAAU,UAAU,CAAC,KAAU,EAAA;AAClC,IAAA,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACjC,CAAC;AAED;AACA,SAAS,SAAS,CAAC,QAAa,EAAE,OAAgB,EAAA;AAC/C,IAAA,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE;AAClB,QAAA,OAAO,QAAQ,CAAA;AACjB,KAAA;AACD,IAAA,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;AACxC,CAAC;AAED;AACM,SAAU,KAAK,CAAC,CAAM,EAAA;IACzB,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC;AACxC,CAAC;AAED;SACgB,KAAK,CAAC,MAAyB,EAAE,GAAQ,EAAE,YAAkB,EAAA;AAC1E,IAAA,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACxB,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;AAC1E,CAAC;AAED;AACM,SAAU,MAAM,CAAC,MAAyB,EAAA;AAC7C,IAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACnB,QAAA,OAAO,CAAC,IAAI,CAAC,CAAA,4DAAA,CAA8D,CAAC,CAAC;AAC/E,KAAA;IACD,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAC5D,IAAA,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;QACvB,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAChC,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACd,CAAC;AAED;AACM,SAAU,KAAK,CAAC,QAAa,EAAA;IAChC,MAAM,GAAG,GAAG,QAAQ,IAAI,QAAQ,CAAC,SAAS,WAAW,CAAC;AACtD,IAAA,OAAO,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AACtC,CAAC;AAED;AACA,MAAM,UAAU,GAAG,CAAC,KAAU,KAAK,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AAE7E;AACA,SAAS,OAAO,CAAC,KAAwB,EAAA;IACtC,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;AACjD,CAAC;AACD,SAAS,UAAU,CAAC,KAAwB,EAAA;AACzC,IAAA,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;QACpB,OAAO,UAAU,CAAC,KAAK,CAAC,SAAS,WAAW,CAAC,CAAC;AAChD,KAAA;AACD,IAAA,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,gBAAgB,mBAAmB,CAAC,CAAC;AACjE,CAAC;AACD,SAAS,UAAU,CAAC,KAAwB,EAAA;AACzC,IAAA,OAAO,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,gBAAgB,mBAAmB,CAAC,CAAC;AACjE,CAAC;AAGD,MAAM,OAAO,CAAA;AACV,IAAA,MAAM,CAAM;IACZ,aAAa,CAAU;IACvB,GAAG,CAAM;IACT,SAAS,CAAU;IACnB,OAAO,CAAM;IAEb,WAAY,CAAA,KAAU,EAAE,OAAgB,EAAA;AACrC,QAAA,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;AAC7B,QAAA,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;KAChD;;AAGD,IAAA,IAAI,KAAK,GAAA;AACN,QAAA,KAAK,CAAC,IAAI,EAAE,QAA0B,CAAA;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC;KACrB;IACD,IAAI,KAAK,CAAC,MAAM,EAAA;;QAEb,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;AACnC,YAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/D,YAAA,OAAO,CAAC,IAAI,EAAE,OAAO,EAAsB,CAAA,YAAA,MAAM,CAAC,CAAC;AACrD,SAAA;KACH;AACH,CAAA;AAED,MAAM,aAAa,CAAA;AAChB,IAAA,OAAO,CAAmB;AAC1B,IAAA,IAAI,CAAK;AACT,IAAA,aAAa,CAAK;AAClB,IAAA,SAAS,CAAS;AAElB,IAAA,WAAA,CAAY,OAA0B,EAAE,IAAS,EAAE,aAAkB,EAAA;AAClE,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACxB;AAED,IAAA,IAAI,KAAK,GAAA;QACN,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpC,QAAA,OAAO,GAAG,KAAK,SAAS,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;KACtD;IAED,IAAI,KAAK,CAAC,MAAM,EAAA;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;KACnC;AACH;;AC7GD,MAAM,eAAe,CAAA;AAClB,IAAA,OAAO,CAAW;IAClB,MAAM,CAAU;AAChB,IAAA,GAAG,GAAQ,SAAS,CAAC;IACrB,MAAM,CAAiB;IACvB,SAAS,CAAU;IACnB,MAAM,CAAY;AAClB,IAAA,WAAA,CAAY,MAAgB,EAAE,OAAiB,EAAE,UAAmB,EAAA;AACjE,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,CAAC,MAAM,EAAE,MAAK;AAC3C,YAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACf,gBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,gBAAA,OAAO,CAAC,IAAI,EAAE,OAAO,cAAqB,CAAC;AAC7C,aAAA;AACJ,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,gBAAgB,mBAAmB,GAAG,UAAU,CAAC;KACxD;AAED,IAAA,IAAI,KAAK,GAAA;AACN,QAAA,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACzB,QAAA,KAAK,CAAC,IAAI,EAAE,QAA0B,CAAC;QACvC,IAAI,IAAI,CAAC,MAAM,EAAE;AACd,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAClC,SAAA;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;KACrB;IAED,IAAI,KAAK,CAAC,QAAmB,EAAA;AAC1B,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACzB;AACH,CAAA;AAEK,SAAU,QAAQ,CAAC,eAA4B,EAAA;AAClD,IAAA,IAAI,MAAgB,CAAC;AACrB,IAAA,IAAI,MAAgB,CAAC;AACrB,IAAA,IAAI,UAAU,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC;AAE7C,IAAA,IAAI,UAAU,CAAC,eAAe,CAAC,EAAE;QAC9B,MAAM,GAAG,eAAe,CAAC;QACzB,MAAM,GAAG,MAAK;AACX,YAAA,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAA;AAC7C,SAAC,CAAA;AACH,KAAA;AAAM,SAAA;AACJ,QAAA,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC;AAC7B,QAAA,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC;AAC/B,KAAA;AAED,IAAA,OAAO,IAAI,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,IAAI,CAAC,MAAM,CAAC,CAAC;AACrE;;;;;;;;;;;;;;;"}