{"version":3,"file":"runtime-dom.global.js","sources":["../src/nodeOps.ts","../../shared/src/index.ts","../src/patchProp.ts","../../runtime-core/src/createVNode.ts","../../runtime-core/src/h.ts","../../reactivity/src/dep.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/ref.ts","../../reactivity/src/computed.ts","../../runtime-core/src/createAppAPI.ts","../../runtime-core/src/componentAPI.ts","../../runtime-core/src/renderer.ts","../src/index.ts"],"sourcesContent":["export const nodeOps = {\r\n   insert: (child:Element, parent:Node, anchor?:Node) => {  // anchor 插入的参考位置\r\n      parent.insertBefore(child, anchor); // parent.appendChild(child)\r\n   },\r\n   remove: (child:Element) => {\r\n      const parent = child.parentNode;\r\n      if(parent){\r\n         parent.removeChild(child)\r\n      }\r\n   },\r\n   createElement : (tag:any) => document.createElement(tag),\r\n   createText: (text:string) => document.createTextNode(text),\r\n   setElementText: (el:Element, text:string) => el.textContent = text,\r\n   setText: (node:any, text:string) => node.innerText = text,\r\n   parentNode: (node:Element) => node.parentNode,\r\n   nextSilbing: (node:Element) => node.nextSibling,\r\n   querySelector: (selector:any) => document.querySelector(selector)\r\n}","export const extend = Object.assign\r\n\r\nexport const isObject = (value: any): boolean => value instanceof Object;\r\n\r\nexport const isArray = Array.isArray\r\n\r\nexport const isNumber = (value: any): boolean => typeof value === \"number\";\r\n\r\nexport const isString = (value: any): boolean => typeof value === \"string\";\r\n\r\nexport const isFunction = (value: any): boolean => typeof value === \"function\";\r\n\r\nexport const isIntegerKey = (key: any):boolean => parseInt(key) + \"\" === key;\r\n\r\nlet own = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (target: any, key: any):boolean => own.call(target, key);\r\n\r\nexport const hasChanged = (oldVal: any, newVal: any): boolean => oldVal !== newVal;\r\n\r\nexport const enum ShapeFlags{ // 二进制移位\r\n   ELEMENT = 1,\r\n   FUNCTIONAL_COMPONENT = 1 << 1, // 函数式组件\r\n   STATEFUL_COMPONENT = 1 << 2,   // 普通组件\r\n   TEXT_CHILDREN = 1 << 3,        // 子节点是文本\r\n   ARRAY_CHILDREN = 1 << 4,       // 子节点是数组\r\n   SLOTS_CHILDREN = 1 << 5,       // 组件插槽\r\n   TELPRORT = 1 << 6,             // teleport组件\r\n   SUSPENSE = 1 << 7,             // suspense组件\r\n   COMPONENT = ShapeFlags.STATEFUL_COMPONENT | FUNCTIONAL_COMPONENT    // 组件\r\n}\r\n\r\n// component = 010 | 100 = 110\r\n// component & FUN = 010  compoent & STAT = 100\r\n// 与其他人 与算法 得出来的都为0  这种做法可以确定权限的关系 \r\n","import { isString } from \"@vue/shared\";\r\n\r\n// 需要对比属性 diff算法 属性比对前后值\r\nfunction patchClass(el: Element, value: any) {\r\n   if (value === null) {\r\n      el.removeAttribute('class')\r\n   } else {\r\n      el.className = value;\r\n   }\r\n}\r\n\r\nfunction patchStyle(el: Element | any, prev: any, next: any) {\r\n   const style = el.style; // 获取样式表\r\n   const isCssString = isString(next); // 判断传入的是否为string\r\n   if (next && !isCssString) {   // 不是则循环修改\r\n      for (const key in next) {\r\n         style[key] = next[key];\r\n      }\r\n      if (prev && !isString(prev)) {\r\n         for (const key in prev) {\r\n            if (next[key] == null) {\r\n               style[key] = null;\r\n            }\r\n         }\r\n      }\r\n   } else {\r\n      if (isCssString) {  // 是string则直接赋值\r\n         if (prev !== next) {\r\n            style.cssText = next;\r\n         } else if (prev) {\r\n            el.removeAttribute('style');\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nfunction createInvoker(value: any) {\r\n   const invoker = (e: any) => {\r\n      invoker.value(e);\r\n   }\r\n   invoker.value = value;  // 后续换绑可以直接更新value值\r\n   return invoker;\r\n}\r\n\r\nfunction patchEvent(el: Element | any, key: string, nextValue: any) {\r\n   // vue event invoker 类似事件池 缓存绑定的事件\r\n   const invokers = el._vei || (el._vel = {});  // 在元素上绑定一个自定义属性 用来记录绑定的事件\r\n   const existingInvoker = invokers[key];\r\n\r\n   if(existingInvoker && nextValue){   // 换绑\r\n      existingInvoker.value = nextValue;\r\n   }else {\r\n      const eventName = key.slice(2).toLowerCase();   // 如果放在if else外面触发不了effect\r\n      if (nextValue) {  // 新增\r\n         const invoker = invokers[key] = createInvoker(nextValue);\r\n         el.addEventListener(eventName, invoker);\r\n      } else if(existingInvoker){   // 删除\r\n         el.removeEventListener(eventName, existingInvoker);\r\n         invokers[key] = undefined;\r\n      }\r\n   }\r\n}\r\n\r\nfunction patchAttr(el:Element, key:string, value:any) {\r\n   if(value == null){\r\n      el.removeAttribute(key);\r\n   }else {\r\n      el.setAttribute(key, value);\r\n   }\r\n}\r\n\r\nexport const patchDOMProp = (el: Element, key: string, prevValue: any, nextValue: any) => {\r\n   if (key === 'class') {\r\n      patchClass(el, nextValue)\r\n   } else if (key === 'style') {\r\n      patchStyle(el, prevValue, nextValue)\r\n   } else if (/^on[^a-z]/.test(key)) {  // onClick...\r\n      patchEvent(el, key, nextValue);\r\n   } else {  // 其他属性 setAttribute （data-type...）\r\n      patchAttr(el, key, nextValue);\r\n   }\r\n}\r\n\r\n","import { isObject, isString, ShapeFlags } from \"@vue/shared\"\r\n\r\nexport const createVNode = (type, props, children?) => {    // h('div', {}, 'Hello!')\r\n   // 虚拟节点就是用一个对象来描述信息的\r\n   const shapeFlag = isObject(type) ? ShapeFlags.COMPONENT : isString(type) ? ShapeFlags.ELEMENT:0;\r\n\r\n   const vnode = {   // 跨平台   (变成类型别名)\r\n      __v_isVNode: true,\r\n      type,\r\n      shapeFlag,\r\n      props,\r\n      children,\r\n      key: props && props.key,\r\n      component: null,     // 如果是组件的虚拟节点需要保存组件实例\r\n      el: null,            // 虚拟节点对应的真实节点\r\n   }\r\n\r\n   if(children){  // 把儿子节点的描述合并到shapleFlag\r\n     vnode.shapeFlag |= isString(children) ? ShapeFlags.TEXT_CHILDREN : ShapeFlags.ARRAY_CHILDREN;\r\n   }\r\n\r\n   // vnode 可以描述当前它是个怎样的节点 子节点是怎么样的\r\n   return vnode;\r\n}\r\n\r\nexport function isVNode(vnode) {\r\n   return !!vnode.__v_isVNode\r\n}\r\n\r\nexport const Text = Symbol();\r\nexport function normalizedVNode(vnode) {\r\n   if(isObject(vnode)){\r\n      return vnode;\r\n   }\r\n   return createVNode(Text, null, String(vnode));\r\n}\r\n\r\nexport function isSameVNodeType(n1, n2) {\r\n   return n1.type === n2.type && n1.key === n2.key;\r\n}","import { isArray, isObject } from \"@vue/shared\";\r\nimport { createVNode, isVNode } from \"./createVNode\";\r\n\r\nexport function h(type, propsOrChildren, children) {\r\n   let len = arguments.length;\r\n\r\n   if(len === 2){\r\n      if(isObject(propsOrChildren) && !isArray(propsOrChildren)){\r\n         if(isVNode(propsOrChildren)){\r\n            return createVNode(type, null, [propsOrChildren])  // h('div', h('span'))\r\n         }\r\n         return createVNode(type, propsOrChildren) // h('div', {color:red})\r\n      }else {\r\n         return createVNode(type, null, propsOrChildren) // h('div', 'Hello')  h('div', ['Hello','Hello'])\r\n      }\r\n   }else {\r\n      if(len > 3){   // 对不是标准传参形式的参数进行处理\r\n         Array.prototype.slice.call(arguments, 2);\r\n      }else if(len === 3 && isVNode(children)) {\r\n         children = [children];\r\n      }\r\n      return createVNode(type, propsOrChildren, children);\r\n   }\r\n}","import { ReactiveEffect } from \"./effect\";\r\n\r\nexport function createDep (effects:Array<ReactiveEffect>):Set<ReactiveEffect<any>> { // 创建依赖收集\r\n   const dep = new Set(effects);\r\n\r\n   return dep;\r\n}","import { extend, isArray, isIntegerKey } from \"@vue/shared\";\r\nimport { createDep } from \"./dep\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\n\r\nlet activeEffect: any;   // 当前正在执行的effect\r\n\r\nexport class ReactiveEffect<T = any>{\r\n   active: boolean = true; // 是否是激活状态 \r\n   deps: any = [];   // 让effect记录他依赖了哪些属性，同时记录当前属性依赖了哪个effect\r\n   parent: ReactiveEffect | undefined = undefined;\r\n   fn: Function;\r\n   scheduler: any;\r\n\r\n   constructor(fn: Function, scheduler?: any) {\r\n      this.fn = fn;\r\n      this.scheduler = scheduler;\r\n   }\r\n\r\n   run() {  // 调用run会让fn执行\r\n      if (!this.active) {  // 如果处于非激活状态，调用run方法会默认调用fn函数\r\n         return this.fn();\r\n      }\r\n\r\n      let parent = activeEffect;\r\n\r\n      while (parent) {\r\n         if (parent === this) {\r\n            return;\r\n         }\r\n         parent = parent.parent;\r\n      }\r\n\r\n      try {\r\n         this.parent = activeEffect;\r\n         activeEffect = this;\r\n         return this.fn()  // 取值 new Proxy 会执行get方法（收集依赖）\r\n      } finally {\r\n         activeEffect = this.parent;\r\n         this.parent = undefined;\r\n      }\r\n   }\r\n\r\n   stop() {    // 让effect和dep取消关联\r\n      if (this.active) {\r\n         cleanupEffect(this); // 移除dep上存储的effect依赖\r\n      }\r\n      this.active = false;\r\n   }\r\n}\r\n\r\n// 清空依赖收集\r\nfunction cleanupEffect(effect) {\r\n   const { deps } = effect;\r\n   if (deps.length) {\r\n      for (let i = 0; i < deps.length; i++) {\r\n         deps[i].delete(effect); // 让属性对应的effect移除掉\r\n      }\r\n      deps.length = 0;\r\n   }\r\n}\r\n\r\nexport function effect(fn: any, options: any = {}) {\r\n   if (fn.effect) {\r\n      fn = fn.effect.fn;\r\n   }\r\n   // 把effect变成一个响应式的effect，可以做到数据变化后重新执行\r\n   const _effect = new ReactiveEffect(fn);\r\n\r\n   if (options) {\r\n      extend(_effect, options);\r\n   }\r\n\r\n   if (!options || !options.lazy) { // 如果不为lazy默认执行一次\r\n      _effect.run();\r\n   }\r\n\r\n   const runner = _effect.run.bind(_effect);\r\n\r\n   runner.effect = _effect;   // 给runner添加effect实现 就是effect实例\r\n\r\n   return runner;\r\n}\r\n\r\n// 让某个对象中的属性收集它对应的effect函数\r\nconst targetMap = new Map()    // 把收集了依赖的对象放入map\r\nexport function track(target: any, key: Symbol | string, type: TrackOpTypes) {\r\n   if (!activeEffect) {\r\n      return;\r\n   }\r\n\r\n   let depsMap = targetMap.get(target);\r\n\r\n   if (!depsMap) {  // 查看是否把当前这个对象放入依赖weakmap，没有则创建一个map放入作为值\r\n      targetMap.set(target, (depsMap = new Map()));\r\n   }\r\n\r\n   let dep = depsMap.get(key);\r\n\r\n   if (!dep) {   // 查看寻找的这个对象里面是否把当前的key放入map，没有则创建一个set放入作为值\r\n      depsMap.set(key, (dep = new Set()));\r\n   }\r\n\r\n   trackEffects(dep);\r\n}\r\n\r\n// 查看set是否有放入了effect，没有则把当前的effect放入set\r\nexport function trackEffects(dep) {\r\n   if (!dep.has(activeEffect)) {\r\n      dep.add(activeEffect);\r\n      (activeEffect as any).deps.push(dep);\r\n   }\r\n}\r\n\r\n// 触发执行依赖，添加元素时，也自动添加effect，并收集依赖\r\nexport function trigger(target: any, key: any, type?: TriggerOrTypes, newVal?: any, oldVal?: any) {\r\n   // 如果target没有被收集依赖则忽略\r\n   const depsMap = targetMap.get(target);\r\n   if (!depsMap) {\r\n      return;\r\n   }\r\n\r\n   // 将所有要执行的effect全部放到一个集合中，最终一起执行\r\n   const deps = [];\r\n\r\n   if (key === \"length\" && isArray(target)) {// 判断为数组，且更新的是长度\r\n      // 如果对应的长度（key）有依赖收集则需要更新\r\n      depsMap.forEach((dep: Array<any>, _key: any) => {// 如果更改的长度小于收集的索引，那么这个索引也需要触发effect进行更新\r\n         if (key === \"length\" || _key >= newVal) {// _key为收集的索引，dep为被收集的索引所有effect的Set集合\r\n            deps.push(dep);\r\n         }\r\n      });\r\n      switch (type) { // 数组修改超出边界\r\n         case TriggerOrTypes.ADD:\r\n            if (isArray(target) && isIntegerKey(key)) {\r\n               // 修改数组中的某个索引(边界之外的，没有赋值所以前面判断为新增)\r\n               deps.push(depsMap.get(\"length\"));   // 触发长度依赖更新\r\n            }\r\n      }\r\n   } else {\r\n      // 对象\r\n      if (key !== undefined) {\r\n         deps.push(depsMap.get(key));   // 拿到具体的dep合集并匹配进新合集\r\n      }\r\n   }\r\n\r\n   const effects: Array<ReactiveEffect> = [];\r\n\r\n   // dep是Set数据类型，里面包含 activeEffect\r\n   for (const dep of deps) {\r\n      if (dep) {\r\n         effects.push(...dep);\r\n      }\r\n   }\r\n\r\n   triggerEffects(createDep(effects));\r\n}\r\n\r\n// 执行所有effect\r\nexport function triggerEffects(dep: Set<ReactiveEffect<any>>) {\r\n   for (const effect of dep) {\r\n      if (effect !== activeEffect) {// 如果当前执行的effect和要执行的effect是同一个就不执行，防止循环\r\n         if (effect.scheduler) {\r\n            effect.scheduler()\r\n         } else {\r\n            effect.run();\r\n         }\r\n      }\r\n   }\r\n}\r\n","// 实现handler\r\n// 1. 是否仅读    2. 是否深度\r\n\r\nimport { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive, readonly } from \"./reactive\";\r\n\r\n// Getter\r\nconst get = createGetter(false, false);\r\nconst shallowGet = createGetter(false, true);\r\nconst readonlyGet = createGetter(true, false);\r\nconst shallowReadonlyGet = createGetter(true, true);\r\n\r\n// Setter\r\nconst set = createSetter(false);\r\nconst shallowSet = createSetter(true);\r\n\r\nlet readonlyObject = {  // 只读对象的Setter方法\r\n   set: (target: any, key: any) => {\r\n      console.warn(`${key} is a read-only attribute and cannot be modified`);\r\n   }\r\n}\r\n\r\nfunction createGetter(isReadOnly: boolean = false, shallow: boolean = false): Function { // 拦截获取\r\n   return function get(target, key, reciver) {  // reciver为代理对象\r\n      // proxy + reflect\r\n      // Reflect方法具备返回值\r\n      const res = Reflect.get(target, key, reciver);\r\n\r\n      if (key === \"__v_isReactive\" || key === \"__v_isReadonly\") {\r\n         return res;\r\n      }\r\n\r\n      if (!isReadOnly) {\r\n         // 收集依赖，等数据变化后更新视图\r\n         track(target, key, TrackOpTypes.GET);\r\n      }\r\n\r\n      if (shallow) {   // 浅层响应式直接返回对象\r\n         return res;\r\n      }\r\n\r\n      if (isObject(res)) {  // 如果是对象继续递归，Vue2一上来就递归; Vue3是当取值时会进行代理，Vue3的代理模式是懒代理\r\n         return isReadOnly ? readonly(res) : reactive(res);\r\n      }\r\n\r\n      return res;\r\n   }\r\n}\r\n\r\nfunction createSetter(shallow: boolean): Function {  // 拦截设置\r\n   return function set(target, key, value, reciver) {   // target[key] = value\r\n      // 当数据更新时，通知所有对应的属性的effect重新执行\r\n\r\n      // 区分新增还是修改执行的set\r\n      let oldVal = target[key];\r\n      if (key === \"__v_isReactive\" || key === \"__v_isReadonly\") {   // 不允许修改内置属性\r\n         console.warn(`The ${key} attribute is a built-in attribute and cannot be changed.`);\r\n         return oldVal;\r\n      }\r\n      const res = Reflect.set(target, key, value, reciver);    // 用Reflect比直接target[key] = value 的做法更好\r\n      let hasKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\r\n\r\n\r\n      if (!hasKey) {\r\n         // 新增\r\n         trigger(target, key, TriggerOrTypes.ADD, value)\r\n      } else if (hasChanged(oldVal, value)) {\r\n         //修改, 并且保证修改的值与之前的不一样\r\n         trigger(target, key, TriggerOrTypes.SET, value, oldVal)\r\n      }\r\n\r\n      return res;\r\n   }\r\n}\r\n\r\nexport const mutableHandlers = {\r\n   get,\r\n   set\r\n};\r\n\r\nexport const shallowReactiveHandlers = {\r\n   get: shallowGet,\r\n   set: shallowSet\r\n};\r\n\r\nexport const readonlyHandlers = extend({\r\n   get: readonlyGet,\r\n\r\n}, readonlyObject);\r\n\r\nexport const shallowReadonlyHandlers = extend({\r\n   get: shallowReadonlyGet,\r\n}, readonlyObject);","// 各个方法区别 : 1. 是不是仅读     2. 是不是深度\r\n// 柯里化\r\nimport { isObject } from '@vue/shared'\r\nimport {\r\n   mutableHandlers,\r\n   shallowReactiveHandlers,\r\n   readonlyHandlers,\r\n   shallowReadonlyHandlers\r\n} from './baseHandlers'\r\n\r\nexport function reactive(target) {\r\n   target[\"__v_isReactive\"] = true;\r\n   target[\"__v_isReadonly\"] = false;\r\n   return createReactiveObject(target, false, mutableHandlers)\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n   target[\"__v_isReactive\"] = true;\r\n   target[\"__v_isReadonly\"] = false;\r\n   return createReactiveObject(target, false, shallowReactiveHandlers)\r\n}\r\n\r\nexport function readonly(target) {\r\n   target[\"__v_isReactive\"] = false;\r\n   target[\"__v_isReadonly\"] = true;\r\n   return createReactiveObject(target, true, readonlyHandlers)\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n   target[\"__v_isReactive\"] = false;\r\n   target[\"__v_isReadonly\"] = true;\r\n   return createReactiveObject(target, false, shallowReadonlyHandlers)\r\n}\r\n\r\n// 拦截数据的读取和数据的修改\r\nconst reactiveMap = new WeakMap();  // 弱引用，会自动进行垃圾回收不会造成内存泄漏，key是对象\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject(target: any, isReadOnly: boolean, handlers: Object): any {\r\n   // reactive API 只拦截对象属性\r\n   if (!isObject(target)) {\r\n      return target;\r\n   }\r\n\r\n   // 如果对象已经被代理了直接拿到代理对象，如果没有被代理，也要判断是不是被深度或仅读代理 又要仅读或深度代理\r\n   const proxyMap = isReadOnly ? readonlyMap : reactiveMap;\r\n\r\n   const existProxy = proxyMap.get(target);\r\n   if (existProxy) {\r\n      return existProxy;\r\n   }\r\n\r\n   const proxy = new Proxy(target, handlers);\r\n   proxyMap.set(target, proxy); //  将将要代理的对象和对应的代理对象存起来\r\n\r\n   return proxy;\r\n}","import { hasChanged, isArray, isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive } from \"./reactive\";\r\n\r\n// 把普通属性改为响应式属性\r\nexport function ref(value: any) {\r\n   return createRef(value, false);\r\n}\r\n\r\n// 与ref类似但是响应式是浅响应式\r\nexport function shallowRef(value: any) {\r\n   return createRef(value, true);\r\n}\r\n\r\n// 创建RefImpl的实例\r\nfunction createRef(rawValue: any, shallow: boolean) {\r\n   if (isRef(rawValue)) {\r\n      return rawValue\r\n   }\r\n   return new RefImpl(rawValue, shallow)\r\n}\r\n\r\n// 判断值是否为ref类型--即判断是否为RefImpl或ObjectRefImpl类的实例\r\nexport function isRef(r: any) {\r\n   return !!(r && r.__v_isRef === true);\r\n}\r\n\r\n// 把对象中的某个key变成响应式\r\nexport function toRef(object: Object|Array<any>, key: any, defaultValue?: any) {\r\n   const val = object[key];\r\n   return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);\r\n}\r\n\r\n// 把一个对象中的所有的key转换成响应式\r\nexport function toRefs(object: Object|Array<any>) {\r\n   if (!isProxy(object)) {    //(process.env.NODE_ENV !== 'production') &&\r\n      console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n   }\r\n   const ret = isArray(object) ? new Array(object.length) : {};\r\n   for (const key in object) {\r\n      ret[key] = toRef(object, key);\r\n   }\r\n   return ret;\r\n}\r\n\r\n// 拿到原始数据\r\nexport function toRaw(observed: any) {\r\n   const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n   return raw ? toRaw(raw) : observed;\r\n}\r\n\r\n// 如果不为shallow且value为对象则使用reactive方法响应式整个value\r\nconst toReactive = (value: any) => isObject(value) ? reactive(value) : value;\r\n\r\n// 判断它是否已经被ref或reactive包装过\r\nfunction isProxy(value: Object|Array<any>) {\r\n   return isReactive(value) || isReadonly(value);\r\n}\r\nfunction isReactive(value: Object|Array<any>) {\r\n   if (isReadonly(value)) {\r\n      return isReactive(value[\"__v_raw\" /* RAW */]);\r\n   }\r\n   return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value: Object|Array<any>) {\r\n   return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\n\r\n\r\nclass RefImpl {\r\n   _value: any;\r\n   __v_isShallow: boolean;    // 是否为浅响应\r\n   dep: any;                  // 对应的effect\r\n   __v_isRef: boolean;        // 产生的实例会被添加该属性，表示是一个ref类型的数据\r\n   __v_raw: any;              // 对应原本的value\r\n\r\n   constructor(value: any, shallow: boolean) {\r\n      this._value = shallow ? value : toReactive(value);\r\n      this.__v_isShallow = shallow;\r\n      this.dep = undefined;\r\n      this.__v_isRef = true;\r\n      this.__v_raw = shallow ? value : toRaw(value);\r\n   }\r\n\r\n   // 类属性访问器\r\n   get value() {\r\n      track(this, \"value\", TrackOpTypes.GET)\r\n      return this._value;\r\n   }\r\n   set value(newVal) {\r\n      // newVal = this.__v_isShallow ? newVal : toRaw(newVal);\r\n      if (hasChanged(newVal, this.__v_raw)) {\r\n         this.__v_raw = newVal;\r\n         this._value = this.__v_isShallow ? newVal : toReactive(newVal);\r\n         trigger(this, \"value\", TriggerOrTypes.SET, newVal);\r\n      }\r\n   }\r\n}\r\n\r\nclass ObjectRefImpl {\r\n   _object: Object|Array<any>\r\n   _key: any\r\n   _defaultValue: any\r\n   __v_isRef: boolean\r\n\r\n   constructor(_object: Object|Array<any>, _key: any, _defaultValue: any) {\r\n      this._object = _object;\r\n      this._key = _key;\r\n      this._defaultValue = _defaultValue;\r\n      this.__v_isRef = true;\r\n   }\r\n\r\n   get value() {\r\n      const val = this._object[this._key];\r\n      return val === undefined ? this._defaultValue : val;\r\n   }\r\n\r\n   set value(newVal) {\r\n      this._object[this._key] = newVal;\r\n   }\r\n}","import { isFunction } from \"@vue/shared\";\r\nimport { ReactiveEffect, track, trigger } from \"./effect\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { toRaw } from \"./ref\";\r\n\r\nclass ComputedRefImpl {\r\n   _setter: Function;\r\n   _dirty: boolean;  // 脏数据标记\r\n   dep: any = undefined;   // 存储dep\r\n   effect: ReactiveEffect; // 计算属性包装的effect\r\n   __v_isRef: boolean;  // ref标记\r\n   _value: any;   // 存储value值\r\n   constructor(getter: Function, _setter: Function, isReadonly: boolean) {\r\n      this._setter = _setter;\r\n      this._dirty = true;\r\n      this.__v_isRef = true;\r\n\r\n      this.effect = new ReactiveEffect(getter, () => {   // 计算属性的依赖值变化，不要重新执行计算属性的effect，而是把数据标记为脏数据\r\n         if (!this._dirty) {\r\n            this._dirty = true;\r\n            trigger(this, \"value\", TriggerOrTypes.SET);\r\n         }\r\n      });\r\n      this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n   }\r\n\r\n   get value() {\r\n      const self = toRaw(this);\r\n      track(self, \"value\", TrackOpTypes.GET);\r\n      if (self._dirty) {\r\n         self._dirty = false;\r\n         self._value = self.effect.run(); // 将结果缓存到effect中，这样就不需要每次都run\r\n      }\r\n      return self._value;\r\n   }\r\n\r\n   set value(newValue: any) {\r\n      this._setter(newValue);\r\n   }\r\n}\r\n\r\nexport function computed(getterOrOptions: any) {\r\n   let getter: Function;\r\n   let setter: Function;\r\n   let onlyGetter = isFunction(getterOrOptions);\r\n\r\n   if (onlyGetter) {\r\n      getter = getterOrOptions;\r\n      setter = () => {\r\n         console.warn(\"computed value is readonly\")\r\n      }\r\n   } else {\r\n      getter = getterOrOptions.get;\r\n      setter = getterOrOptions.set;\r\n   }\r\n   return new ComputedRefImpl(getter, setter, onlyGetter || !setter);\r\n}","import { createVNode } from './createVNode'\r\n\r\n\r\n\r\nexport const createAppAPI = (render:Function) => {\r\n   return (rootCompont, rootProps) => {\r\n      let isMounted = false;\r\n      const app = { // 返回的app对象\r\n         mount(container) {\r\n            // 1. 创造虚拟节点\r\n            let vnode = createVNode(rootCompont, rootProps);   // h函数\r\n            // 2. 挂载的核心就是根据传入的组件对象，创造虚拟节点，再把虚拟节点渲染到组件中\r\n            render(vnode, container);\r\n            if(!isMounted){\r\n               isMounted = true;\r\n            }\r\n         },\r\n         unmount() {}\r\n      }\r\n      return app;\r\n   }\r\n}","import { reactive } from '@vue/reactivity';\r\nimport { hasOwn, isFunction, isObject } from '@vue/shared';\r\n\r\n// 生成组件实例\r\nexport function createComponentInstance(vnode) {\r\n   const type = vnode.type;\r\n   const instance = {\r\n      vnode,                     // 实例化对象的虚拟节点\r\n      type,                      // 组件对象\r\n      subTree: null,             // 组件渲染的内容   组件的vnode叫vnode 组件渲染的结果叫subTree\r\n      ctx: {},                   // 上下文\r\n      props: {},                 // 组件属性\r\n      attrs: {},                 // 除了props中的属性\r\n      slots: {},                 // 组件的插槽\r\n      setupState: {},            // setup函数返回的状态\r\n      propsOptions: type.props,  // 属性选项\r\n      proxy: null,               // 实例的代理对象\r\n      render: null,              // 组件的渲染函数\r\n      emit: null,                // 事件触发\r\n      expose: {},                // 组件暴露的方法\r\n      isMounted: false           // 组件是否挂载完成\r\n   }\r\n\r\n   instance.ctx = { _: instance };\r\n   return instance;\r\n}\r\n\r\n// 给组件实例进行赋值\r\nexport function setupComponent(instance) {\r\n   const { props, children } = instance.vnode;\r\n   // 组件的props初始化 attrs初始化\r\n   initProps(instance, props);\r\n   // 插槽的初始化\r\n   initSlots(instance, children);\r\n   // 启动状态，目的是调用setup函数拿到返回值\r\n   setupStatefulComponent(instance);\r\n}\r\n\r\n// 初始化props和attrs\r\nexport function initProps(instance, rawProps) {\r\n   const props = {};\r\n   const attrs = {};\r\n   const options = Object.keys(instance.propsOptions)\r\n\r\n   if (rawProps) {\r\n      for (const [key, value] of Object.entries(rawProps)) {\r\n         if (options.includes(key as string)) {\r\n            props[key] = value;\r\n         } else {\r\n            attrs[key] = value;\r\n         }\r\n      }\r\n   }\r\n   instance.props = reactive(props);\r\n   instance.attrs = attrs;   // 非响应式\r\n}\r\n\r\n// 初始化slots\r\nexport const initSlots = (instance, children) => {\r\n\r\n}\r\n\r\n// 创建一个setup的上下文\r\nconst createSetupContext = (instance) => {\r\n   return {\r\n      attrs: instance.attrs,\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose: (exposed) => instance.expose = exposed || {}\r\n   }\r\n}\r\n\r\n// 代理对象的handler\r\nconst PublicInstanceProxyHandles ={\r\n   get({_:instance}, key) {\r\n      const { setupState, props } = instance;\r\n      if(hasOwn(setupState, key)){  // 先查看setup返回值没有再去查看props\r\n         return setupState[key];\r\n      }else if(hasOwn(props, key)) {\r\n         return props[key];\r\n      }else {  // vue2语法\r\n\r\n      }\r\n   },\r\n   set({_:instance}, key, value) {\r\n      // 不允许对props进行修改\r\n      const { setupState, props } = instance;\r\n      if(hasOwn(setupState, key)){\r\n         setupState[key] = value;\r\n      }else if(hasOwn(props, key)) {\r\n         console.warn(\"Props are readonly\")\r\n         return false;\r\n      }else {  // vue2语法\r\n\r\n      }\r\n      return true;\r\n   }\r\n}\r\n\r\n// 启动setup\r\nexport const setupStatefulComponent = (instance) => {\r\n   // 核心是调用组件的setup方法\r\n   const compoent = instance.type;\r\n   const { setup } = compoent;\r\n   instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandles); // 代理上下文处理函数\r\n   if (setup) {\r\n      const setupContext = createSetupContext(instance);\r\n      let setupResult = setup(instance.props, setupContext);   // 获取setup返回的值\r\n      if (isFunction(setupResult)) {\r\n         instance.render = setupResult;\r\n      } else if (isObject(setupResult)) {\r\n         instance.setupState = setupResult;\r\n      }\r\n   }\r\n\r\n   if (!instance.render) {\r\n      // 如果没写render写了template，则需要模板编译 template -> render\r\n      instance.render = compoent.render;  // 没有写render函数，则使用组件的render\r\n   }\r\n}\r\n","import { createAppAPI } from './createAppAPI'\r\nimport { ShapeFlags } from \"@vue/shared\";\r\nimport { createComponentInstance, setupComponent } from './componentAPI';\r\nimport { ReactiveEffect } from '@vue/reactivity';\r\nimport { isSameVNodeType, normalizedVNode, Text } from './createVNode';\r\n\r\nfunction getSequence(seq: Array<any>): Array<any> {\r\n   let len = seq.length;\r\n   const result = [0];\r\n   let p = seq.slice(0);\r\n   let lastIndex;\r\n   let start;\r\n   let end;\r\n   let middle;\r\n\r\n   for (let i = 0; i < len; i++) {\r\n      const seqI = seq[i];\r\n\r\n      if (seqI !== 0) {\r\n         lastIndex = result[result.length - 1];\r\n         if (seq[lastIndex] < seqI) {\r\n            p[i] = lastIndex;\r\n            result.push(i);\r\n            continue;\r\n         }\r\n         // 二分查找 替换元素\r\n         start = 0;\r\n         end = result.length - 1;\r\n         while (start < end) {\r\n            middle = ((start + end) / 2) | 0;\r\n            if (seq[result[middle]] < seqI) {\r\n               start = middle + 1;\r\n            } else {\r\n               end = middle;\r\n            }\r\n\r\n            if (seqI < seq[result[start]]) {\r\n               p[i] = result[start - 1];\r\n               result[start] = i;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   let i = result.length;\r\n   let last = result[i - 1];\r\n   while (i > 0) {\r\n      i--;\r\n      result[i] = last;\r\n      last = p[last];\r\n   }\r\n\r\n   return result; // 输出索引\r\n}\r\n\r\nexport function createRenderer(renderOptions: any) {   // runtime-core   renderOptionsApi -> rootCompont -> rootPros -> container\r\n   const {  // renderOptions里面的方法\r\n      insert: hostInsert,\r\n      remove: hostRemove,\r\n      patchDOMProp: hostPatchProp,\r\n      createElement: hostCreateElement,\r\n      createText: hostCreateText,\r\n      setText: hostSetText,\r\n      setElementText: HostSetElementText,\r\n      parentNode: HostParentNode,\r\n      nextSibling: HostNextSilbing,\r\n      querySelector: HostQuerySelector\r\n   } = renderOptions;\r\n\r\n   // 创建渲染effect\r\n   const setupRenderEffect = (initialVNode, instance, container) => {\r\n      // 核心是调用render，数据变化，重新调用render\r\n      const componentUpdateFn = () => {\r\n         let { proxy } = instance;\r\n         if (!instance.isMounted) {\r\n            // 组件初始化流程\r\n            // 调用render方法（渲染页面的时候会进行取值操作，那么取值的时候会进行依赖收集，收集对应的依赖属性）\r\n            const subTree = instance.subTree = instance.render.call(proxy, proxy);  // 渲染时调用h方法\r\n\r\n            patch(null, subTree, container);\r\n            initialVNode.el = subTree.el;\r\n            instance.isMounted = true;\r\n         } else {\r\n            // 组件更新触发effect\r\n            // diff算法 比较前后两棵树\r\n            const prevTree = instance.subTree;\r\n            const nextTree = instance.render.call(proxy, proxy);\r\n\r\n            patch(prevTree, nextTree, container); // 比较两棵树\r\n         }\r\n      }\r\n      const effect = new ReactiveEffect(componentUpdateFn);\r\n      const update = effect.run.bind(effect);\r\n      update();\r\n   }\r\n   // 组件挂载的过程\r\n   const mountComponent = (initialVNode, container) => {\r\n      // 根据组件的虚拟dom，创造真实的dom，渲染到容器\r\n      // 1. 给组件创造一个实例\r\n      const instance = initialVNode.component = createComponentInstance(initialVNode);  // 给组件创造一个实例\r\n      // 2. 需要给组件实例进行赋值操作\r\n      setupComponent(instance);        // 给组件实例进行赋值操作\r\n      // 3. 调用render方法实现组件渲染逻辑， 如果依赖的数据发生变化，组件需要重新渲染\r\n\r\n      // 数据和视图是双向绑定的 如果数据变化，视图更新\r\n      // effect可以用在组件中，这样数据变化后可以自动重新执行effect函数\r\n      setupRenderEffect(initialVNode, instance, container); // 渲染effect\r\n\r\n   }\r\n\r\n   // 组件更新的过程\r\n   const updateComponent = (n1, n2, optimized) => {\r\n\r\n   }\r\n\r\n   // 处理组件\r\n   const processComponent = (n1, n2, container) => {\r\n      if (n1 == null) {   // 后期可以考虑缓存组件的情况 COMPONENT_KEPT_ALIVE\r\n         // 组件初始化挂载\r\n         mountComponent(n2, container);\r\n      } else {\r\n         // 组件更新挂载\r\n         // updateComponent(n1, n2, optimeized);\r\n         console.log(\"更新\")\r\n      }\r\n   }\r\n\r\n   // 子元素挂载\r\n   const mountChildren = (children, container) => {   // 容器为父元素\r\n      for (let i = 0; i < children.length; i++) {\r\n         const child = (children[i] = normalizedVNode(children[i]));\r\n\r\n         patch(null, child, container);\r\n      }\r\n   }\r\n\r\n   // 元素挂载的过程\r\n   const mountElemnt = (vnode, container, anchor) => {\r\n      // 给元素创建一个实例\r\n      // vnode中的children 可能是数组，对象数组，字符串数组，字符串\r\n      let { type, shapeFlag, props, children } = vnode;\r\n      let el = vnode.el = hostCreateElement(type);\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n         hostSetText(el, children);\r\n      } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n         mountChildren(children, el);\r\n      }\r\n\r\n      // 处理属性\r\n      if (props) {\r\n         for (const key in props) {\r\n            const value = props[key];\r\n            hostPatchProp(el, key, null, value);\r\n         }\r\n      }\r\n      hostInsert(el, container, anchor);\r\n   }\r\n\r\n   // 对比元素中的属性\r\n   const patchProps = (oldProps, newProps, el) => {\r\n      if (oldProps === newProps) return;\r\n\r\n      for (const key in newProps) { // 新值与旧值不一样\r\n         const prev = oldProps[key];\r\n         const next = newProps[key];\r\n         if (prev !== next) {\r\n            hostPatchProp(el, key, prev, next);\r\n         }\r\n      }\r\n\r\n      for (const key in oldProps) { // 新值不存在的旧值\r\n         if (!(key in newProps)) {\r\n            hostPatchProp(el, key, oldProps[key], null);\r\n         }\r\n      }\r\n   }\r\n\r\n   // 卸载子节点\r\n   const unmountChildren = (children) => {\r\n      for (const child of children) {\r\n         unmount(child);\r\n      }\r\n   }\r\n\r\n   // 对比两个同为数组的子节点\r\n   const patchKeyedChildren = (c1, c2, container) => {\r\n      let i = 0;  // 从头结点开始\r\n      const l2 = c2.length;\r\n      let e1 = c1.length - 1;\r\n      let e2 = l2 - 1;\r\n\r\n      // 1. sync from start 从头开始一个个孩子来比较，遇到不同的节点就停止\r\n      while (i <= e1 && i <= e2) {  // 如果i和新的列表或者老的列表指针重合，说明比较完毕了\r\n         const n1 = c1[i];\r\n         const n2 = c2[i];\r\n\r\n         if (isSameVNodeType(n1, n2)) {\r\n            patch(n1, n2, container);\r\n         } else {\r\n            break;\r\n         }\r\n         i++;\r\n      }\r\n\r\n      // 2. sync from end 从末尾开始一个个子节点比较，遇到不同的节点就停止\r\n      while (i <= e1 && i <= e2) {  // 如果i和新的列表或者老的列表指针重合，说明比较完毕了\r\n         const n1 = c1[e1];\r\n         const n2 = c2[e2];\r\n         if (isSameVNodeType(n1, n2)) {\r\n            patch(n1, n2, container);\r\n         } else {\r\n            break;\r\n         }\r\n         e1--;\r\n         e2--;\r\n      }\r\n\r\n      // common sequence + mount\r\n      if (i > e1) { // 新增\r\n         if (i <= e2) { // i 与 e2 中间的元素是新增的\r\n            const nextPos = e2 + 1;\r\n            // 参照物的目的是找到插入的位置\r\n            const anchor = nextPos < l2 ? c2[nextPos].el : null;\r\n            while (i <= e2) {\r\n               patch(null, c2[i], container, anchor);\r\n               i++;\r\n            }\r\n         }\r\n      }\r\n      // common sequence + unmount\r\n      else if (i > e2) { // 删除\r\n         while (i <= e1) { // i 与 e2中间的元素是需要删除的\r\n            unmount(c1[i]);\r\n            i++;\r\n         }\r\n      }\r\n      // unknow sequence\r\n      else {   // 先找出复用序列再进行新增\r\n         const s1 = i;  // s1 -> e1 老的子节点列表\r\n         const s2 = i;  // s2 -> e2 新的子节点列表\r\n\r\n         // 根据新的子节点序列创造映射表\r\n         const keyToNewIndexMap = new Map();\r\n         for (i = s2; i <= e2; i++) {\r\n            const child = c2[i];\r\n            keyToNewIndexMap.set(child.key, i);\r\n         }\r\n\r\n         // 搜索旧的子节点序列能复用的序列索引\r\n         const toBePatched = e2 - s2 + 1; // 索引数组的长度\r\n         const newIndexToOldIndexMap = new Array(toBePatched).fill(0); // 储存可复用的索引+1 索引是旧节点在旧数组的索引 0表示不存在\r\n\r\n         for (i = s1; i <= e1; i++) {\r\n            const prevChild = c1[i];\r\n            let newIndex = keyToNewIndexMap.get(prevChild.key);\r\n\r\n            if (newIndex == undefined) { // 删除多余的 新子节点中不存在的旧子节点\r\n               unmount(prevChild);\r\n            } else {\r\n               newIndexToOldIndexMap[newIndex - s2] = i + 1;  // 保证不为0\r\n               patch(prevChild, c2[newIndex], container);   // 填表后还需比对\r\n            }\r\n         }\r\n\r\n         let queue = getSequence(newIndexToOldIndexMap); // 最长递增子序列算法求出可优化的某段子节点索引\r\n         let j = queue.length - 1;  // 倒序插入\r\n\r\n         for (i = toBePatched - 1; i >= 0; i--) {  // 倒序插入 \r\n            let lastIndex = s2 + i;\r\n            let lastChild = c2[lastIndex];\r\n            let anchor = lastIndex + 1 < c2.length ? c2[lastIndex + 1].el : null;\r\n            \r\n            if (newIndexToOldIndexMap[i] === 0) {  // 等于0的时候没有真实节点，需要创建真实节点插入\r\n               patch(null, lastChild, container, anchor);   // 创建一个h插入到f前面\r\n            } else {\r\n               // 可以优化 有些节点可以不移动\r\n               if (i !== queue[j]) {\r\n                  hostInsert(lastChild.el, container, anchor); // 将列表倒序插入\r\n               } else {\r\n                  j--; // 优化点  表示元素不需要移动\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // 对比子节点\r\n   const patchChildren = (n1, n2, el: Element) => {\r\n      const c1 = n1 && n1.children\r\n      const prevShapeFlag = n1.shapeFlag\r\n      const c2 = n2 && n2.children\r\n      const shapeFlag = n2.shapeFlag\r\n      // c1 和 c2 有哪些类型  (n1为空的情况在processElement阶段已经处理了)\r\n      // 1. 之前是数组现在是文本   2. 之前是数组，现在也是数组   3. 之前是文本，现在是数组  \r\n      // 4. 之前是文本现在是空    5. 之前是文本现在是文本     6. 之前是文本现在是空\r\n\r\n      if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n         if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {  // 之前是数组\r\n            unmountChildren(c1); // 1（把情况1变成情况4）\r\n         }\r\n         if (c1 != c2) {  // 4 5\r\n            HostSetElementText(el, c2);\r\n         }\r\n      } else { // 现在是数组或空\r\n         if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n            if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) { // 2\r\n               // 对比两个数组的差异\r\n               patchKeyedChildren(c1, c2, el)\r\n            } else { // 之前是数组 现在是空文本\r\n               unmountChildren(c1);\r\n            }\r\n         } else {// 之前是文本  3 6 \r\n            if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n               HostSetElementText(el, '')\r\n            }\r\n            if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n               mountChildren(c2, el)\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // 对比元素\r\n   const patchElement = (n1, n2) => {\r\n      let el = n2.el = n1.el; // 比较元素一致则复用\r\n\r\n      const oldProps = n1.props || {}; // 比较属性\r\n      const newProps = n2.props || {};\r\n      patchProps(oldProps, newProps, el);\r\n\r\n      // 比较children，diff核心   diff算法是同级比较\r\n      patchChildren(n1, n2, el);\r\n   }\r\n\r\n   // 处理元素（一般是组件对应的返回值）\r\n   const processElement = (n1, n2, container, anchor) => {\r\n      if (n1 == null) {\r\n         // 初始化\r\n         mountElemnt(n2, container, anchor);\r\n      } else {\r\n         // diff\r\n         patchElement(n1, n2);\r\n      }\r\n   }\r\n\r\n   // 处理文本\r\n   const processText = (n1, n2, container) => { // 容器为父元素\r\n      if (n1 == null) {\r\n         // 初始化\r\n         let textNode = hostCreateText(n2.children);\r\n         n2.el = textNode;\r\n         hostInsert(textNode, container);\r\n      } else {\r\n\r\n      }\r\n   }\r\n\r\n   const unmount = (vnode) => {\r\n      hostRemove(vnode.el); // 删除真实节点\r\n   }\r\n\r\n   // 组件初次渲染和更新\r\n   const patch = (n1, n2, container, anchor?) => {\r\n      if (n1 == n2) {\r\n         return;\r\n      }\r\n\r\n      // 更新的patch 两个元素标签不一样 key也不一样，直接卸载旧的\r\n      if (n1 && !isSameVNodeType(n1, n2)) {\r\n         unmount(n1);\r\n         n1 = null;\r\n      }\r\n\r\n      const { shapeFlag, type } = n2;\r\n\r\n      switch (type) {\r\n         case Text:\r\n            processText(n1, n2, container);\r\n            break;\r\n         default:\r\n            if (shapeFlag & ShapeFlags.COMPONENT) {  // 判断渲染的是否为组件 \r\n               processComponent(n1, n2, container);\r\n            } else if (shapeFlag & ShapeFlags.ELEMENT) { // 判断渲染的是否为元素\r\n               processElement(n1, n2, container, anchor);\r\n            }\r\n      }\r\n   }\r\n\r\n   // 将虚拟节点变成真实节点渲染到容器中\r\n   const render = (vnode, container) => {\r\n      if (vnode == null) {\r\n         if (container._vnode) {   // vnode为空 container有_vnode属性 此时为卸载组件\r\n            // unmount()\r\n         }\r\n      } else {\r\n         // 包括初次渲染和更新 后续会更新patch \r\n         patch(container._vnode || null, vnode, container)// 后续更新 prevNode nextNode container\r\n      }\r\n      container._vnode = vnode;  // 渲染过后把vnode与container绑定\r\n   }\r\n\r\n   return {\r\n      createApp: createAppAPI(render),\r\n      render\r\n   };\r\n}","// 需要涵盖dom操作的api、属性操作的api，将这些api传入runtime-core中\r\n\r\n// runtime-core在操作中不需要依赖于平台代码（平台代码时传入的）\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchDOMProp } from './patchProp'\r\nimport { createRenderer } from '@vue/runtime-core'\r\n\r\nconst renderOptions = Object.assign(nodeOps, { patchDOMProp })\r\n\r\nexport const createApp = (component: any, rootProps?: any) => {\r\n   // 创建渲染器\r\n   const { createApp } = createRenderer(renderOptions);  // 传入环境API\r\n   let app = createApp(component, rootProps);\r\n   let { mount } = app; // 获取core中的mount\r\n   app.mount = function (container) {  // 重写mount\r\n      container = nodeOps.querySelector(container);\r\n      container.innerHTML = '';\r\n      mount(container);\r\n   }\r\n   return app;\r\n}\r\n\r\nexport * from '@vue/runtime-core'\r\n"],"names":[],"mappings":"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"}